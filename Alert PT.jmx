<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="alert" elementType="Argument">
            <stringProp name="Argument.name">alert</stringProp>
            <stringProp name="Argument.value">alertnowitgrdev.opsnow.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="keycloak" elementType="Argument">
            <stringProp name="Argument.name">keycloak</stringProp>
            <stringProp name="Argument.value">alertnow-keycloak-dev.dev.opsnow.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth" elementType="Argument">
            <stringProp name="Argument.value">authstage.opsnow.com</stringProp>
            <stringProp name="Argument.name">auth</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="alertnow_domain" elementType="Argument">
            <stringProp name="Argument.value">alertnow-dev.opsnow.com</stringProp>
            <stringProp name="Argument.name">alertnow_domain</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
          </elementProp>
          <elementProp name="Cookie" elementType="Header">
            <stringProp name="Header.name">Cookie</stringProp>
            <stringProp name="Header.value">_ga=GA1.1.732948639.1695711241; _clck=1bd2zzg|2|ffc|0|1364; _ga_31WDR2T6TT=GS1.1.1695711243.1.0.1695711243.0.0.0; _clsk=jb9c28|1695711245048|1|1|x.clarity.ms/collect; _ga_TSQZ8VFC12=GS1.1.1695711241.1.1.1695711253.0.0.0; BSP_LangCode=en</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Mobile" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Platform" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Dest" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
            <stringProp name="Header.value">document</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Mode" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
            <stringProp name="Header.value">navigate</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Site" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
            <stringProp name="Header.value">same-site</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
          </elementProp>
          <elementProp name="Cache-Control" elementType="Header">
            <stringProp name="Header.name">Cache-Control</stringProp>
            <stringProp name="Header.value">max-age=0</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Mobile" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Platform" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Dest" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
            <stringProp name="Header.value">document</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Mode" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
            <stringProp name="Header.value">navigate</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Site" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
            <stringProp name="Header.value">cross-site</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="authority" elementType="Header">
            <stringProp name="Header.name">authority</stringProp>
            <stringProp name="Header.value">authstage.opsnow.com </stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">method</stringProp>
            <stringProp name="Header.value">GET</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">scheme</stringProp>
            <stringProp name="Header.value">https </stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
          </elementProp>
          <elementProp name="Cookie" elementType="Header">
            <stringProp name="Header.name">Cookie</stringProp>
            <stringProp name="Header.value">_ga=GA1.1.2092217758.1695661902; _clck=17xsd52|2|ffb|0|1363; _ga_31WDR2T6TT=GS1.1.1695661910.1.0.1695661910.0.0.0; _ga_TSQZ8VFC12=GS1.1.1695661902.1.1.1695661910.0.0.0; BSP_LangCode=en; _clsk=yffa07|1695661911680|1|1|x.clarity.ms/collect</stringProp>
          </elementProp>
          <elementProp name="Referer" elementType="Header">
            <stringProp name="Header.name">Referer</stringProp>
            <stringProp name="Header.value">http://alertnowlocal.opsnow.com:4200/</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Mobile" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Sec-Ch-Ua-Platform" elementType="Header">
            <stringProp name="Header.name">Sec-Ch-Ua-Platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Dest" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
            <stringProp name="Header.value">document</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Mode" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
            <stringProp name="Header.value">navigate</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Site" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
            <stringProp name="Header.value">cross-site</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - CheckMK" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;SERVICENOTIFICATIONNUMBER&quot;: &quot;2&quot;,&#xd;
  &quot;SERVICEACKCOMMENT&quot;: &quot;&quot;,&#xd;
  &quot;CONTACTNAME&quot;: &quot;cmkadmin&quot;,&#xd;
  &quot;HOSTTAGS&quot;: &quot;/wato/ auto-piggyback cmk-agent ip-v4 ip-v4-only lan no-snmp prod site:raweditionsite tcp&quot;,&#xd;
  &quot;NOTIFICATIONAUTHORNAME&quot;: &quot;&quot;,&#xd;
  &quot;SHORTDATETIME&quot;: &quot;2021-09-08 08:37:56&quot;,&#xd;
  &quot;CONTACTPAGER&quot;: &quot;&quot;,&#xd;
  &quot;LASTSERVICESTATECHANGE&quot;: &quot;1631090274&quot;,&#xd;
  &quot;SERVICEFORURL&quot;: &quot;Check_MK%20Discovery&quot;,&#xd;
  &quot;HOSTOUTPUT&quot;: &quot;OK - 10.251.5.30: rta 0.009ms, lost 0%&quot;,&#xd;
  &quot;LONGSERVICEOUTPUT&quot;: &quot;&quot;,&#xd;
  &quot;SERVICESHORTSTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;HOSTLABEL_cmk/os_family&quot;: &quot;linux&quot;,&#xd;
  &quot;HOSTPROBLEMID&quot;: &quot;0&quot;,&#xd;
  &quot;HOSTNOTIFICATIONNUMBER&quot;: &quot;1&quot;,&#xd;
  &quot;OMD_ROOT&quot;: &quot;/omd/sites/raweditionsite&quot;,&#xd;
  &quot;HOSTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;HOSTACKCOMMENT&quot;: &quot;&quot;,&#xd;
  &quot;CONTACTS&quot;: &quot;pagerduty&quot;,&#xd;
  &quot;DATE&quot;: &quot;2021-09-08&quot;,&#xd;
  &quot;LONGHOSTOUTPUT&quot;: &quot;&quot;,&#xd;
  &quot;LASTHOSTUP_REL&quot;: &quot;5d 01:29:24&quot;,&#xd;
  &quot;MONITORING_HOST&quot;: &quot;ip-10-251-5-30&quot;,&#xd;
  &quot;LASTHOSTSTATECHANGE_REL&quot;: &quot;11d 03:13:26&quot;,&#xd;
  &quot;LASTSERVICESTATE&quot;: &quot;WARNING&quot;,&#xd;
  &quot;SERVICEDESC&quot;: &quot;Check_MK Discovery&quot;,&#xd;
  &quot;WHAT&quot;: &quot;HOST&quot;,&#xd;
  &quot;HOSTALIAS&quot;: &quot;mylinux&quot;,&#xd;
  &quot;LASTHOSTSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;LASTSERVICESHORTSTATE&quot;: &quot;WARN&quot;,&#xd;
  &quot;HOSTPERFDATA&quot;: &quot;rta=0.009ms;200.000;500.000;0; pl=0%;80;100;; rtmax=0.030ms;;;; rtmin=0.003ms;;;;&quot;,&#xd;
  &quot;SERVICEACKAUTHOR&quot;: &quot;&quot;,&#xd;
  &quot;SERVICEATTEMPT&quot;: &quot;1&quot;,&#xd;
  &quot;CONTACTEMAIL&quot;: &quot;jiseong.lee@bespinglobal.com&quot;,&#xd;
  &quot;LASTHOSTSTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;HOSTATTEMPT&quot;: &quot;1&quot;,&#xd;
  &quot;LOGDIR&quot;: &quot;/omd/sites/raweditionsite/var/check_mk/notify&quot;,&#xd;
  &quot;PREVIOUSSERVICEHARDSHORTSTATE&quot;: &quot;WARN&quot;,&#xd;
  &quot;HOSTGROUPNAMES&quot;: &quot;check_mk&quot;,&#xd;
  &quot;SERVICESTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;MICROTIME&quot;: &quot;1631527629888841&quot;,&#xd;
  &quot;LASTHOSTUP&quot;: &quot;1631090265&quot;,&#xd;
  &quot;PREVIOUSHOSTHARDSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;LASTSERVICESTATEID&quot;: &quot;1&quot;,&#xd;
  &quot;LASTSERVICEOK&quot;: &quot;1631090274&quot;,&#xd;
  &quot;HOSTADDRESS&quot;: &quot;10.251.5.30&quot;,&#xd;
  &quot;SERVICEPROBLEMID&quot;: &quot;0&quot;,&#xd;
  &quot;LASTSERVICEOK_REL&quot;: &quot;5d 01:29:15&quot;,&#xd;
  &quot;HOSTCHECKCOMMAND&quot;: &quot;check-mk-host-ping!-w 200.00,80.00% -c 500.00,100.00%&quot;,&#xd;
  &quot;SERVICESTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;NOTIFICATIONTYPE&quot;: &quot;RECOVERY&quot;,&#xd;
  &quot;HOSTFORURL&quot;: &quot;mylinux&quot;,&#xd;
  &quot;HOSTACKAUTHOR&quot;: &quot;&quot;,&#xd;
  &quot;HOSTURL&quot;: &quot;/check_mk/index.py?start_url=view.py%3Fview_name%3Dhoststatus%26host%3Dmylinux%26site%3Draweditionsite&quot;,&#xd;
  &quot;HOSTSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;SERVICEPERFDATA&quot;: &quot;&quot;,&#xd;
  &quot;NOTIFICATIONAUTHORALIAS&quot;: &quot;&quot;,&#xd;
  &quot;HOST_ADDRESS_4&quot;: &quot;10.251.5.30&quot;,&#xd;
  &quot;HOSTSTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;HOST_ADDRESS_6&quot;: &quot;&quot;,&#xd;
  &quot;SERVICEOUTPUT&quot;: &quot;no unmonitored services found, no vanished services found, no new host labels&quot;,&#xd;
  &quot;HOSTLABEL_cmk/device_type&quot;: &quot;vm&quot;,&#xd;
  &quot;LONGDATETIME&quot;: &quot;Wed Sept 8 08:37:56 UTC 2021&quot;,&#xd;
  &quot;SERVICECHECKCOMMAND&quot;: &quot;check-mk-inventory&quot;,&#xd;
  &quot;NOTIFICATIONCOMMENT&quot;: &quot;&quot;,&#xd;
  &quot;CONTACTALIAS&quot;: &quot;cmkadmin&quot;,&#xd;
  &quot;PREVIOUSSERVICEHARDSTATE&quot;: &quot;WARNING&quot;,&#xd;
  &quot;MAIL_COMMAND&quot;: &quot;mail -s &apos;$SUBJECT$&apos; &apos;$CONTACTEMAIL$&apos;&quot;,&#xd;
  &quot;HOSTLABEL_cmk/check_mk_server&quot;: &quot;yes&quot;,&#xd;
  &quot;HOSTNAME&quot;: &quot;mylinux${__RandomString(1,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789)}&quot;,&#xd;
  &quot;LASTHOSTSTATECHANGE&quot;: &quot;1630565623&quot;,&#xd;
  &quot;LASTSERVICESTATECHANGE_REL&quot;: &quot;5d 01:29:15&quot;,&#xd;
  &quot;HOST_ADDRESS_FAMILY&quot;: &quot;4&quot;,&#xd;
  &quot;LASTHOSTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;PREVIOUSHOSTHARDSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;SERVICEGROUPNAMES&quot;: &quot;&quot;,&#xd;
  &quot;HOSTDOWNTIME&quot;: &quot;0&quot;,&#xd;
  &quot;SERVICEURL&quot;: &quot;/check_mk/index.py?start_url=view.py%3Fview_name%3Dservice%26host%3Dmylinux%26service%3DCheck_MK%20Discovery%26site%3Draweditionsite&quot;,&#xd;
  &quot;OMD_SITE&quot;: &quot;raweditionsite&quot;,&#xd;
  &quot;NOTIFICATIONAUTHOR&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">alertnowitgrdev.opsnow.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">integration/checkmk/v1/33fb43b57698f611ee6856a3027e7c3b4b64</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - email" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Alerts" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">000</stringProp>
            <stringProp name="CounterConfig.end">100</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter_value</stringProp>
            <stringProp name="CounterConfig.format">001</stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Azure${counter_value}-ResourceId bfc3defb-c00a-4928-96c8-1ad33056f237-${counter_value}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;schemaId&quot;:&quot;AzureMonitorMetricAlert&quot;,&#xd;
  &quot;data&quot;:{&#xd;
    &quot;version&quot;:&quot;2.0&quot;,&#xd;
    &quot;status&quot;:&quot;Activated&quot;,&#xd;
    &quot;context&quot;:{&#xd;
      &quot;timestamp&quot;:&quot;2018-04-16T03:55:47.4676682Z&quot;,&#xd;
      &quot;id&quot;:&quot;/subscriptions/${__UUID()}/resourceGroups/AMSTERDAM-${__RandomString(5,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-BSPERP/providers/microsoft.insights/metricAlerts/Percentage%20CPU%20is%20Greater%20than%20${__Random(1,9)}.${__Random(0,9)}%25%20-%20Amsterdam%20BSPERP&quot;,&#xd;
      &quot;name&quot;:&quot;Percentage CPU is Greater than 3.7 - Amsterdam BSPERP&quot;,&#xd;
      &quot;description&quot;:&quot;&quot;,&#xd;
      &quot;conditionType&quot;:&quot;SingleResourceMultipleMetricCriteria&quot;,&#xd;
      &quot;condition&quot;:{&#xd;
        &quot;windowSize&quot;:&quot;PT5M&quot;,&#xd;
        &quot;allOf&quot;:[&#xd;
          {&#xd;
            &quot;metricName&quot;:&quot;Percentage CPU&quot;,&#xd;
            &quot;dimensions&quot;:[&#xd;
              {&#xd;
                &quot;name&quot;:&quot;Alert - Azure${counter_value}-ResourceId&quot;,&#xd;
                &quot;value&quot;:&quot;bfc3defb-c00a-4928-96c8-1ad33056f237-${counter_value}&quot;&#xd;
              },&#xd;
&#xd;
              {&#xd;
                &quot;name&quot;:&quot;ResourceId&quot;,&#xd;
                &quot;value&quot;:&quot;bfc3defb-c00a-4928-96c8-1ad33056f237&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;operator&quot;:&quot;GreaterThan&quot;,&#xd;
            &quot;threshold&quot;:&quot;3.7&quot;,&#xd;
            &quot;timeAggregation&quot;:&quot;PT5M&quot;,&#xd;
            &quot;metricValue&quot;:1.0&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;subscriptionId&quot;:&quot;8254106c-1a81-4065-9484-e9352de1368b&quot;,&#xd;
      &quot;resourceGroupName&quot;:&quot;AMSTERDAM-BSPERP&quot;,&#xd;
      &quot;resourceName&quot;:&quot;ATD-WEB01&quot;,&#xd;
      &quot;resourceType&quot;:&quot;Microsoft.Compute/virtualMachines&quot;,&#xd;
      &quot;resourceId&quot;:&quot;/subscriptions/8254106c-1a81-4065-9484-e9352de1368b/resourceGroups/AMSTERDAM-BSPERP/providers/Microsoft.Compute/virtualMachines/ATD-WEB01&quot;,&#xd;
      &quot;portalLink&quot;:&quot;https://portal.azure.com/#resource//subscriptions/8254106c-1a81-4065-9484-e9352de1368b/resourceGroups/AMSTERDAM-BSPERP/providers/Microsoft.Compute/virtualMachines/ATD-WEB01&quot;&#xd;
    },&#xd;
    &quot;properties&quot;:{&#xd;
&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/azurealert/v1/658cb84657fcc511ee8a32370204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - AzureCommonAlerts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;schemaId&quot;: &quot;azureMonitorCommonAlertSchema&quot;,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;essentials&quot;: {&#xd;
      &quot;alertId&quot;: &quot;/subscriptions/${__UUID()}/providers/Microsoft.AlertsManagement/alerts/${__UUID()}&quot;,&#xd;
      &quot;alertRule&quot;: &quot;CPU 사용률 - ubuntudev&quot;,&#xd;
      &quot;severity&quot;: &quot;Sev3&quot;,&#xd;
      &quot;signalType&quot;: &quot;Metric&quot;,&#xd;
      &quot;monitorCondition&quot;: &quot;Fired&quot;,&#xd;
      &quot;monitoringService&quot;: &quot;Platform&quot;,&#xd;
      &quot;alertTargetIDs&quot;: [&#xd;
        &quot;/subscriptions/4a413ee7-db09-4849-9bfa-6aed244a697b/resourcegroups/dev-vm-rg/providers/microsoft.compute/virtualmachines/ubuntudev&quot;&#xd;
      ],&#xd;
      &quot;configurationItems&quot;: [&#xd;
        &quot;ubuntudev&quot;&#xd;
      ],&#xd;
      &quot;originAlertId&quot;: &quot;4a413ee7-db09-4849-9bfa-6aed244a697b_dev-vm-rg_microsoft.insights_metricAlerts_CPU 사용률 - ubuntudev_605721420&quot;,&#xd;
      &quot;firedDateTime&quot;: &quot;2022-10-20T01:30:19.2811471Z&quot;,&#xd;
      &quot;resolvedDateTime&quot;: &quot;2022-10-20T01:30:19.2811471Z&quot;,&#xd;
      &quot;description&quot;: &quot;&quot;,&#xd;
      &quot;essentialsVersion&quot;: &quot;1.0&quot;,&#xd;
      &quot;alertContextVersion&quot;: &quot;1.0&quot;&#xd;
    },&#xd;
    &quot;alertContext&quot;: {&#xd;
      &quot;properties&quot;: null,&#xd;
      &quot;conditionType&quot;: &quot;MultipleResourceMultipleMetricCriteria&quot;,&#xd;
      &quot;condition&quot;: {&#xd;
        &quot;windowSize&quot;: &quot;PT5M&quot;,&#xd;
        &quot;allOf&quot;: [&#xd;
          {&#xd;
            &quot;metricName&quot;: &quot;Percentage CPU&quot;,&#xd;
            &quot;metricNamespace&quot;: &quot;Microsoft.Compute/virtualMachines&quot;,&#xd;
            &quot;operator&quot;: &quot;GreaterThan&quot;,&#xd;
            &quot;threshold&quot;: &quot;80&quot;,&#xd;
            &quot;timeAggregation&quot;: &quot;Average&quot;,&#xd;
            &quot;dimensions&quot;: [],&#xd;
            &quot;metricValue&quot;: 96.369,&#xd;
            &quot;webTestName&quot;: null&#xd;
          }&#xd;
        ],&#xd;
        &quot;windowStartTime&quot;: &quot;2022-10-20T01:22:11.439Z&quot;,&#xd;
        &quot;windowEndTime&quot;: &quot;2022-10-20T01:27:11.439Z&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;customProperties&quot;: null&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/azurecommonalerts/v1/93c2fd5657fcc411ee3a32350204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - CloudInsight" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;alarmEndTime&quot;:0,&#xd;
  &quot;alarmStartTime&quot;:1617682920447,&#xd;
  &quot;asgPolicys&quot;:[&#xd;
&#xd;
  ],&#xd;
  &quot;calc&quot;:&quot;AVG&quot;,&#xd;
  &quot;calcSlidingGroupKey&quot;:&quot;&quot;,&#xd;
  &quot;cfTriggers&quot;:[&#xd;
&#xd;
  ],&#xd;
  &quot;checkTime&quot;:1617683041550,&#xd;
  &quot;consecutive&quot;:0,&#xd;
  &quot;criteria&quot;:50.0,&#xd;
  &quot;dataTime&quot;:1617682920447,&#xd;
  &quot;desc&quot;:&quot;CPU Utilization Average&quot;,&#xd;
  &quot;dimensions&quot;:{&#xd;
    &quot;type&quot;:&quot;svr&quot;,&#xd;
    &quot;instanceNo&quot;: &quot;6355343_${__UUID()}&quot;,&#xd;
  },&#xd;
  &quot;domainCode&quot;:&quot;PUB&quot;,&#xd;
  &quot;duration&quot;:1,&#xd;
  &quot;eventCauseType&quot;:&quot;RULE_EVENT&quot;,&#xd;
  &quot;inMaintenance&quot;:false,&#xd;
  &quot;level&quot;:&quot;INFO&quot;,&#xd;
  &quot;metric&quot;:&quot;avg_cpu_used_rto&quot;,&#xd;
  &quot;metricGroupItemId&quot;:576494283037741056,&#xd;
  &quot;newStatus&quot;:&quot;VIOLATED&quot;,&#xd;
  &quot;oldStatus&quot;:&quot;OK&quot;,&#xd;
  &quot;operator&quot;:&quot;GE&quot;,&#xd;
  &quot;prodKey&quot;:&quot;460438474722512896&quot;,&#xd;
  &quot;recipientNotifications&quot;:[&#xd;
    {&#xd;
      &quot;groupName&quot;:&quot;AlertNow&quot;,&#xd;
      &quot;groupNum&quot;:2248,&#xd;
      &quot;notifyTypes&quot;:[&#xd;
        &quot;SMS&quot;,&#xd;
        &quot;EMAIL&quot;&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
  &quot;regionCode&quot;:&quot;KR&quot;,&#xd;
  &quot;ruleId&quot;:576732851362467840,&#xd;
   &quot;ruleName&quot;: &quot;event rule name_${__UUID()}&quot;,&#xd;
  &quot;unit&quot;:&quot;&quot;,&#xd;
  &quot;userId&quot;:&quot;&quot;,&#xd;
  &quot;value&quot;:99.9&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/cloudinsight/v1/00add46e77fcd411ee7a32340204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Cloudwatch" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;AlarmName&quot;: &quot;summit_dm_rds_alertnow_cpuutilization&quot;,&#xd;
  &quot;AlarmDescription&quot;: &quot;cpuutilization monitoring&quot;,&#xd;
  &quot;AWSAccountId&quot;: &quot;${__Random(100000000000,999999999999)}&quot;,&#xd;
  &quot;NewStateValue&quot;: &quot;ALARM&quot;,&#xd;
  &quot;NewStateReason&quot;: &quot;Threshold Crossed: 1 out of the last 1 datapoints [1.33333333331393 (22/10/18 01:26:00)] was greater than or equal to the threshold (1.2) (minimum 1 datapoint for OK -&gt; ALARM transition).&quot;,&#xd;
  &quot;StateChangeTime&quot;: &quot;2018-10-22T01:27:26.543+0000&quot;,&#xd;
  &quot;Region&quot;: &quot;Asia Pacific (Seoul)&quot;,&#xd;
  &quot;OldStateValue&quot;: &quot;OK&quot;,&#xd;
  &quot;Trigger&quot;: {&#xd;
    &quot;MetricName&quot;: &quot;CPUUtilization&quot;,&#xd;
    &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#xd;
    &quot;StatisticType&quot;: &quot;Statistic&quot;,&#xd;
    &quot;Statistic&quot;: &quot;AVERAGE&quot;,&#xd;
    &quot;Dimensions&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;DBInstanceIdentifier&quot;,&#xd;
        &quot;value&quot;: &quot;seoul-dev-lightsaber-alarm-db01&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;Period&quot;: 60,&#xd;
    &quot;EvaluationPeriods&quot;: 1,&#xd;
    &quot;ComparisonOperator&quot;: &quot;GreaterThanOrEqualToThreshold&quot;,&#xd;
    &quot;Threshold&quot;: 1.2,&#xd;
    &quot;TreatMissingData&quot;: &quot;EvaluateLowSampleCountPercentile&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/cloudwatch/v1/2e36e89157fcd111ee8a32370204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Consul" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;check&quot;: &quot;Service \&apos;nginx\&apos; check_${__UUID()}&quot;,&#xd;
  &quot;checkId&quot;:&quot;service:nginx&quot;,&#xd;
  &quot;interval&quot;:&quot;0&quot;,&#xd;
  &quot;node&quot;: &quot;psumbp${counter}&quot;,&#xd;
  &quot;notes&quot;:&quot;&quot;,&#xd;
  &quot;notifList&quot;:&quot;map[]&quot;,&#xd;
  &quot;output&quot;:&quot;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\ncurl: (7) Failed to connect to localhost port 8080: Connection refused\n&quot;,&#xd;
  &quot;rmdCheck&quot;:&quot;2020-06-15 11:40:20.056373 \u0026#43;0900 KST m=\u0026#43;1606.290477736&quot;,&#xd;
  &quot;service&quot;:&quot;nginx&quot;,&#xd;
  &quot;serviceId&quot;: &quot;nginx_${__UUID()}&quot;,&#xd;
  &quot;status&quot;:&quot;critical&quot;,&#xd;
  &quot;timestamp&quot;:&quot;2020-06-15 11:40:20.056373 \u0026#43;0900 KST m=\u0026#43;1606.290477820&quot;,&#xd;
  &quot;varOverrides&quot;:&quot;{\u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt; []}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/consul/v1/5ea812b267fcd911ee4a32350204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Datadog" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;:&quot;4785709289301425247&quot;,&#xd;
  &quot;email&quot;:&quot;&quot;,&#xd;
  &quot;eventTitle&quot;:&quot;[Triggered on {host:SEOUL-A-DEV-OPSNOW-BASTION}] CPU Alarm&quot;,&#xd;
  &quot;eventMsg&quot;:&quot;%%%\n@webhook-AlertTest @youngho.noh@bespinglobal.com\n\n[![Metric Graph](https://p.datadoghq.com/snapshot/view/dd-snapshots-prod/org_240869/2019-02-07/07e2b1c537973d893a31a95442487d9089bc9011.png)](https://app.datadoghq.com/monitors#8155485?to_ts=1549513415000&amp;group=host%3ASEOUL-A-DEV-OPSNOW-BASTION&amp;from_ts=1549512455000)\n\n`avg(last_1m):avg:system.cpu.user{*} by {host} &gt; 90`\n\nThe monitor was last triggered at Thu Feb 07 2019 04:22:45 UTC (**3 secs ago**).\n\n- - -\n\n[[Monitor Status](https://app.datadoghq.com/monitors#8155485?group=host%3ASEOUL-A-DEV-OPSNOW-BASTION)] \u00b7 [[Edit Monitor](https://app.datadoghq.com/monitors#8155485/edit)] \u00b7 [[View SEOUL-A-DEV-OPSNOW-BASTION](https://app.datadoghq.com/infrastructure?filter=SEOUL-A-DEV-OPSNOW-BASTION)] \u00b7 [[Show Processes](https://app.datadoghq.com/process?sort=cpu%2CDESC&amp;to_ts=1549513485000&amp;tags=host%3ASEOUL-A-DEV-OPSNOW-BASTION&amp;from_ts=1549512465000&amp;live=false&amp;showSummaryGraphs=true)]\n%%%&quot;,&#xd;
  &quot;textOnlyMsg&quot;:&quot;\n@webhook-AlertTest @youngho.noh@bespinglobal.com\n\n`avg(last_1m):avg:system.cpu.user{*} by {host} &gt; 90`\n\nMetric value: 99.933\n\nMetric Graph: https://app.datadoghq.com/monitors#8155485?to_ts=1549513415000&amp;group=host%3ASEOUL-A-DEV-OPSNOW-BASTION&amp;from_ts=1549512455000 \u00b7 Monitor Status: https://app.datadoghq.com/monitors#8155485?group=host%3ASEOUL-A-DEV-OPSNOW-BASTION \u00b7 Edit Monitor: https://app.datadoghq.com/monitors#8155485/edit \u00b7 Event URL: https://app.datadoghq.com/event/event?id=4785709289301425247 \u00b7 View SEOUL-A-DEV-OPSNOW-BASTION: https://app.datadoghq.com/infrastructure?filter=SEOUL-A-DEV-OPSNOW-BASTION&quot;,&#xd;
  &quot;eventType&quot;:&quot;query_alert_monitor&quot;,&#xd;
  &quot;date&quot;:&quot;1549513368000&quot;,&#xd;
  &quot;datePosix&quot;:&quot;1549513368&quot;,&#xd;
  &quot;alertId&quot;: &quot;${__counter(true,8155485)}&quot;,&#xd;
  &quot;alertType&quot;:&quot;error&quot;,&#xd;
  &quot;aggregKey&quot;:&quot;9964bf5b4ce6fe96dbfe1a10b8353e4e&quot;,&#xd;
  &quot;orgId&quot;:&quot;240869&quot;,&#xd;
  &quot;alertStatus&quot;:&quot;avg(last_1m):avg:system.cpu.user{*} by {host} &gt; 90&quot;,&#xd;
  &quot;alertScope&quot;: &quot;host:SEOUL-A-DEV-OPSNOW-BASTION_${__UUID()}&quot;,&#xd;
  &quot;hostname&quot;:&quot;SEOUL-A-DEV-OPSNOW-BASTION&quot;,&#xd;
  &quot;user&quot;:&quot;null&quot;,&#xd;
  &quot;username&quot;:&quot;&quot;,&#xd;
  &quot;snapshot&quot;:&quot;https://p.datadoghq.com/snapshot/view/dd-snapshots-prod/org_240869/2019-02-07/07e2b1c537973d893a31a95442487d9089bc9011.png&quot;,&#xd;
  &quot;link&quot;:&quot;https://app.datadoghq.com/event/event?id=4785709289301425247&quot;,&#xd;
  &quot;priority&quot;:&quot;normal&quot;,&#xd;
  &quot;tags&quot;:&quot;host:seoul-a-dev-opsnow-bastion,monitor&quot;,&#xd;
  &quot;lastUpdated&quot;:&quot;1549513368000&quot;,&#xd;
  &quot;lastUpdatedPosix&quot;:&quot;1549513368&quot;,&#xd;
  &quot;alertMetric&quot;: &quot;system.cpu.user_${__UUID()}&quot;,&#xd;
  &quot;metricNamespace&quot;:&quot;system&quot;,&#xd;
  &quot;alertTransition&quot;:&quot;Triggered&quot;,&#xd;
  &quot;orgName&quot;:&quot;Bespinglobal&quot;,&#xd;
  &quot;alertQuery&quot;: &quot;avg(last_1m):avg:system.cpu.user{*} by {host} &gt; 90_${__UUID()}&quot;,&#xd;
  &quot;alertTitle&quot;:&quot;CPU Alarm on host:SEOUL-A-DEV-OPSNOW-BASTION&quot;,&#xd;
  &quot;alertCycleKey&quot;:&quot;4785709290660379745&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/datadog/v1/87dad59067fcd611ee1a32350204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Dynatrace" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;ImpactedEntities&quot;: [&#xd;
    {&#xd;
      &quot;entity&quot;: &quot;HOST-02457195C52E0FB3&quot;,&#xd;
      &quot;name&quot;: &quot;seoul-a-dev-lightsaber-notification-daemon01&quot;,&#xd;
      &quot;type&quot;: &quot;HOST&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;ImpactedEntity&quot;: &quot;testtest on Host seoul-a-dev-lightsaber-notification-daemon01&quot;,&#xd;
  &quot;PID&quot;: &quot;148303154068499859&quot;,&#xd;
  &quot;ProblemDetailsHTML&quot;: &quot;&lt;h3&gt;RESOLVED Custom Alert 599 in environment &lt;i&gt;daf61312&lt;/i&gt;&lt;/h3&gt;&lt;br&gt;&lt;small&gt;Problem detected at: 07:01 (UTC) 17.02.2020 - 07:07 (UTC) 17.02.2020 (was open for 6 min)&lt;/small&gt;&lt;hr&gt;&lt;b&gt;1 impacted infrastructure component&lt;/b&gt;&lt;hr&gt;&lt;br&gt;&lt;div&gt;&lt;span&gt;Host&lt;/span&gt;&lt;br&gt;&lt;b&gt;&lt;span style=\&quot;color:#7dc540; font-size:120%\&quot;&gt;seoul-a-dev-lightsaber-notification-daemon01&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;p style=\&quot;margin-left:1em\&quot;&gt;&lt;b&gt;&lt;span style=\&quot;font-size:110%\&quot;&gt;testtest&lt;/span&gt;&lt;/b&gt;&lt;br&gt;The CPU usage % value of 66 % was above your custom threshold of 50 %.&lt;/p&gt;&lt;/div&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=\&quot;https://daf61312.live.dynatrace.com/#problems/problemdetails;pid=1483031540684998599_1581922860000V2\&quot;&gt;Open in Browser&lt;/a&gt;&lt;/p&gt;&quot;,&#xd;
  &quot;ProblemDetailsJSON&quot;: {&#xd;
    &quot;affectedCounts&quot;: {&#xd;
      &quot;APPLICATION&quot;: 0,&#xd;
      &quot;ENVIRONMENT&quot;: 0,&#xd;
      &quot;INFRASTRUCTURE&quot;: 0,&#xd;
      &quot;SERVICE&quot;: 0&#xd;
    },&#xd;
    &quot;commentCount&quot;: 0,&#xd;
    &quot;displayName&quot;: &quot;599&quot;,&#xd;
    &quot;endTime&quot;: 1583209341000,&#xd;
    &quot;hasRootCause&quot;: false,&#xd;
    &quot;id&quot;: &quot;1483031540684998599_${__UUID()}&quot;,&#xd;
    &quot;impactLevel&quot;: &quot;INFRASTRUCTURE_${__UUID()}&quot;,&#xd;
    &quot;rankedEvents&quot;: [&#xd;
      {&#xd;
        &quot;endTime&quot;: 1583209341000,&#xd;
        &quot;entityId&quot;: &quot;HOST-02457195C52E0FB3&quot;,&#xd;
        &quot;entityName&quot;: &quot;seoul-a-dev-lightsaber-notification-daemon01&quot;,&#xd;
        &quot;eventType&quot;: &quot;CUSTOM_ALERT&quot;,&#xd;
        &quot;impactLevel&quot;: &quot;INFRASTRUCTURE&quot;,&#xd;
        &quot;isRootCause&quot;: false,&#xd;
        &quot;severities&quot;: [&#xd;
          {&#xd;
            &quot;context&quot;: &quot;CPU_USAGE&quot;,&#xd;
            &quot;unit&quot;: &quot;Percent (%)&quot;,&#xd;
            &quot;value&quot;: 33.758399963378906&#xd;
          }&#xd;
        ],&#xd;
        &quot;severityLevel&quot;: &quot;CUSTOM_ALERT&quot;,&#xd;
        &quot;startTime&quot;: 1583209341000,&#xd;
        &quot;status&quot;: &quot;CLOSED&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;rankedImpacts&quot;: [&#xd;
      {&#xd;
        &quot;entityId&quot;: &quot;HOST-02457195C52E0FB3&quot;,&#xd;
        &quot;entityName&quot;: &quot;seoul-a-dev-lightsaber-notification-daemon01&quot;,&#xd;
        &quot;eventType&quot;: &quot;CUSTOM_ALERT&quot;,&#xd;
        &quot;impactLevel&quot;: &quot;INFRASTRUCTURE&quot;,&#xd;
        &quot;severityLevel&quot;: &quot;CUSTOM_ALERT&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;recoveredCounts&quot;: {&#xd;
      &quot;APPLICATION&quot;: 0,&#xd;
      &quot;ENVIRONMENT&quot;: 0,&#xd;
      &quot;INFRASTRUCTURE&quot;: 1,&#xd;
      &quot;SERVICE&quot;: 0&#xd;
    },&#xd;
    &quot;severityLevel&quot;: &quot;CUSTOM_ALERT&quot;,&#xd;
    &quot;startTime&quot;: 1583209341000,&#xd;
    &quot;status&quot;: &quot;OPEN&quot;,&#xd;
    &quot;tagsOfAffectedEntities&quot;: [&#xd;
    ]&#xd;
  },&#xd;
  &quot;ProblemDetailsMarkdown&quot;: &quot;## RESOLVED Custom Alert 599 in environment *daf61312*\n\nProblem detected at: 07:01 (UTC) 17.02.2020 - 07:07 (UTC) 17.02.2020 (was open for 6 min)\n\n---\n**1 impacted infrastructure component**\n\n---\n\n\nHost\n### **seoul-a-dev-lightsaber-notification-daemon01**\n&gt; **testtest**\n&gt;\n&gt; The CPU usage % value of 66 % was above your custom threshold of 50 %.\n\n\n---\n\n[Open in Browser](https://daf61312.live.dynatrace.com/#problems/problemdetails;pid=1483031540684998599_1581922860000V2)\n&quot;,&#xd;
  &quot;ProblemDetailsText&quot;: &quot;RESOLVED Custom Alert 599 in environment daf61312\nProblem detected at: 07:01 (UTC) 17.02.2020 - 07:07 (UTC) 17.02.2020 (was open for 6 min)\n\n1 impacted infrastructure component\n\nHost\nseoul-a-dev-lightsaber-notification-daemon01\n\ntesttest\nThe CPU usage % value of 66 % was above your custom threshold of 50 %.\n\nhttps://daf61312.live.dynatrace.com/#problems/problemdetails;pid=1483031540684998599_1581922860000V2&quot;,&#xd;
  &quot;ProblemID&quot;: &quot;599&quot;,&#xd;
  &quot;ProblemImpact&quot;: &quot;INFRASTRUCTURE&quot;,&#xd;
  &quot;ProblemSeverity&quot;: &quot;CUSTOM_ALERT&quot;,&#xd;
  &quot;ProblemTitle&quot;: &quot;testttt&quot;,&#xd;
  &quot;ProblemURL&quot;: &quot;https://daf61312.live.dynatrace.com/#problems/problemdetails;pid=1483031540684998599_1581922860000V2&quot;,&#xd;
  &quot;State&quot;: &quot;OPEN&quot;,&#xd;
  &quot;Tags&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/dynatrace/v1/baffbb0787fcd211ee5a32360204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Eventbridge" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;version&quot;: &quot;0&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;detail-type&quot;: &quot;AWS_API_Call_via_CloudTrail_${__UUID()}&quot;,&#xd;
  &quot;source&quot;: &quot;aws.logs-${__UUID()}&quot;&#xd;
  &quot;account&quot;: &quot;${__time()}${__Random(100000,999999)}&quot;,&#xd;
  &quot;time&quot;: &quot;2022-01-18T02:42:49Z&quot;,&#xd;
  &quot;region&quot;: &quot;ap-northeast-2-${__UUID()}&quot;,&#xd;
  &quot;resources&quot;: [],&#xd;
  &quot;detail&quot;: {&#xd;
    &quot;eventVersion&quot;: &quot;1.08&quot;,&#xd;
    &quot;userIdentity&quot;: {&#xd;
      &quot;type&quot;: &quot;IAMUser&quot;,&#xd;
      &quot;principalId&quot;: &quot;AIDAR4HHYPPIXFNWHGRE4&quot;,&#xd;
      &quot;arn&quot;: &quot;arn:aws:iam::129335065553:user/donghyuk.kim@bespinglobal.com&quot;,&#xd;
      &quot;accountId&quot;: &quot;129335065553&quot;,&#xd;
      &quot;accessKeyId&quot;: &quot;ASIAR4HHYPPI5D52JEER&quot;,&#xd;
      &quot;userName&quot;: &quot;donghyuk.kim@bespinglobal.com&quot;,&#xd;
      &quot;sessionContext&quot;: {&#xd;
        &quot;sessionIssuer&quot;: {},&#xd;
        &quot;webIdFederationData&quot;: {},&#xd;
        &quot;attributes&quot;: {&#xd;
          &quot;creationDate&quot;: &quot;2022-01-18T01:02:19Z&quot;,&#xd;
          &quot;mfaAuthenticated&quot;: &quot;true&quot;&#xd;
        }&#xd;
      }&#xd;
    },&#xd;
    &quot;eventTime&quot;: &quot;2022-01-18T02:42:49Z&quot;,&#xd;
    &quot;eventSource&quot;: &quot;logs.amazonaws.com&quot;,&#xd;
    &quot;eventName&quot;: &quot;StartQuery&quot;,&#xd;
    &quot;awsRegion&quot;: &quot;ap-northeast-2&quot;,&#xd;
    &quot;sourceIPAddress&quot;: &quot;61.100.182.168&quot;,&#xd;
    &quot;userAgent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&quot;,&#xd;
    &quot;requestParameters&quot;: {&#xd;
      &quot;logGroupNames&quot;: [&#xd;
        &quot;/aws/rds/cluster/seoul-dev-scarif-db-cluster/error&quot;&#xd;
      ],&#xd;
      &quot;startTime&quot;: 1640054569,&#xd;
      &quot;endTime&quot;: 1642473769,&#xd;
      &quot;queryString&quot;: &quot;fields @timestamp, @message\\n| sort @timestamp desc\\n| limit 20&quot;&#xd;
    },&#xd;
    &quot;responseElements&quot;: {&#xd;
      &quot;queryId&quot;: &quot;e0de12ab-19e0-4e28-9f57-ed9327b6418a&quot;&#xd;
    },&#xd;
    &quot;requestID&quot;: &quot;e0de12ab-19e0-4e28-9f57-ed9327b6418a&quot;,&#xd;
    &quot;eventID&quot;: &quot;0b1e1d73-72f6-49fb-9a46-a38a77d9076f&quot;,&#xd;
    &quot;readOnly&quot;: false,&#xd;
    &quot;eventType&quot;: &quot;AwsApiCall&quot;,&#xd;
    &quot;apiVersion&quot;: &quot;20140328&quot;,&#xd;
    &quot;managementEvent&quot;: true,&#xd;
    &quot;recipientAccountId&quot;: &quot;129335065553&quot;,&#xd;
    &quot;eventCategory&quot;: &quot;Management&quot;,&#xd;
    &quot;sessionCredentialFromConsole&quot;: &quot;true&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/eventbridge/v1/19e9711257fce311ee7a32380204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - FreshDesk" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;freshdesk_webhook&quot;: {&#xd;
    &quot;ticket_id&quot;: ${__counter(true,18)},&#xd;
    &quot;ticket_subject&quot;: &quot;[AlertNow Freshdesk] AFD Incident#03&quot;,&#xd;
    &quot;ticket_description&quot;: &quot;&lt;div style=\&quot;font-family:-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif; font-size:14px\&quot;&gt;&lt;div&gt;AFD Incident#03&lt;/div&gt;&lt;/div&gt;&quot;,&#xd;
    &quot;ticket_url&quot;: &quot;https://alertnow.freshdesk.com/helpdesk/tickets/${__counter(true,18)}&quot;,&#xd;
    &quot;ticket_portal_url&quot;: &quot;https://alertnow.freshdesk.com/support/tickets/18&quot;,&#xd;
    &quot;ticket_tags&quot;: &quot;AN&quot;,&#xd;
    &quot;ticket_latest_public_comment&quot;: null,&#xd;
    &quot;ticket_latest_private_comment&quot;: null,&#xd;
    &quot;ticket_group_name&quot;: &quot;Customer Support&quot;,&#xd;
    &quot;ticket_agent_name&quot;: null,&#xd;
    &quot;ticket_agent_email&quot;: null,&#xd;
    &quot;ticket_due_by_time&quot;: &quot;January 12 2022 at 05:00 PM EST&quot;,&#xd;
    &quot;ticket_satisfaction_survey&quot;: &quot;&quot;,&#xd;
    &quot;ticket_status&quot;: &quot;Open&quot;,&#xd;
    &quot;ticket_priority&quot;: &quot;Low&quot;,&#xd;
    &quot;ticket_source&quot;: &quot;Phone&quot;,&#xd;
    &quot;ticket_ticket_type&quot;: null,&#xd;
    &quot;helpdesk_name&quot;: &quot;베스핀 글로벌&quot;,&#xd;
    &quot;triggered_event&quot;: &quot;{ticket_action:created}&quot;,&#xd;
    &quot;ticket_company_name&quot;: null,&#xd;
    &quot;ticket_company_description&quot;: null,&#xd;
    &quot;ticket_company_note&quot;: null,&#xd;
    &quot;ticket_company_domains&quot;: null,&#xd;
    &quot;ticket_contact_name&quot;: &quot;Hyeyoung Lee 이혜영&quot;,&#xd;
    &quot;ticket_contact_firstname&quot;: &quot;Hyeyoung&quot;,&#xd;
    &quot;ticket_contact_lastname&quot;: &quot;Hyeyoung Lee 이혜영&quot;,&#xd;
    &quot;ticket_contact_mobile&quot;: null,&#xd;
    &quot;ticket_contact_email&quot;: &quot;hyeyoung.lee@bespinglobal.com&quot;,&#xd;
    &quot;ticket_contact_phone&quot;: null,&#xd;
    &quot;ticket_contact_address&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/freshdesk/v1/5a91891377fce311ee1a32370204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Grafana" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;evalMatches&quot;: [&#xd;
    {&#xd;
      &quot;value&quot;: 17.586802803683565,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-INTEGRATION-WAS01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.33.11:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.33.11:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-0a705358089fdb25f&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-INTEGRATION-WAS01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;API&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 19.17047930107034,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-NOTIFICATION-BATCH01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.33.31:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.33.31:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-00f673e0a5e7a3795&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-NOTIFICATION-BATCH01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;PROC&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 46.6499227049702,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ALARM-OPENAPI-WAS01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.33.32:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.33.32:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-01a32063aa1c6e3f9&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ALARM-OPENAPI-WAS01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;API&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 23.0367314032759,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ALARM-CONSUMER-DAEMON01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.35.11:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.35.11:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-00b2b04565443696d&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ALARM-CONSUMER-DAEMON01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;PROC&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 50.98948780406277,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ESCALATION-BATCH01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.35.193:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.35.193:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-0bb1a4dc90d30d9d4&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ESCALATION-BATCH01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;PROC&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 43.055901505177374,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.35.21:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.35.21:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-0063871374dfa0219&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;API&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 65.3499390855357,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ZIPKIN01&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.35.82:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.35.82:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-012ccb363a6dade2f&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-ZIPKIN01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.small&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;service_role&quot;: &quot;API&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;value&quot;: 13.984137356197277,&#xd;
      &quot;metric&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-INTEGRATION-WAS12&quot;,&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2c&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.34.24:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.34.24:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-018ceb08d8f31359d&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-INTEGRATION-WAS12&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      }&#xd;
    }&#xd;
  ],&#xd;
  &quot;ruleId&quot;: ${__counter(true,3)},&#xd;
  &quot;ruleName&quot;: &quot;Linux Nodes Memory Usage alert&quot;,&#xd;
  &quot;ruleUrl&quot;: &quot;http://localhost:3000/d/000000012/alerts-linux-nodes?fullscreen\u0026edit\u0026tab=alert\u0026panelId=5\u0026orgId=1&quot;,&#xd;
  &quot;state&quot;: &quot;alerting&quot;,&#xd;
  &quot;title&quot;: &quot;[Alerting] Linux Nodes Memory Usage alert&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/grafana/v1/a96b427d67fce111ee9a32340204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Guard Duty" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;version&quot;: &quot;0&quot;,&#xd;
  &quot;id&quot;: &quot;f2a16f0a-2ca2-0a16-24fc-ea84585ea281&quot;,&#xd;
  &quot;detail-type&quot;: &quot;GuardDuty Finding&quot;,&#xd;
  &quot;source&quot;: &quot;aws.guardduty&quot;,&#xd;
  &quot;account&quot;: &quot;567066324238&quot;,&#xd;
  &quot;time&quot;: &quot;2020-02-27T05:15:02Z&quot;,&#xd;
  &quot;region&quot;: &quot;ap-northeast-2&quot;,&#xd;
  &quot;resources&quot;: [ ],&#xd;
  &quot;detail&quot;: {&#xd;
    &quot;schemaVersion&quot;: &quot;2.0&quot;,&#xd;
    &quot;accountId&quot;: &quot;${__Random(100000000000,999999999999)}&quot;,&#xd;
    &quot;region&quot;: &quot;ap-northeast-2_${__time()}_${__Random(1000,9999)}&quot;,&#xd;
    &quot;partition&quot;: &quot;aws&quot;,&#xd;
    &quot;id&quot;: &quot;20b830830fba04bd78c7ad7f72f2d190&quot;,&#xd;
    &quot;arn&quot;: &quot;arn:aws:guardduty:ap-northeast-2:567066324238:detector/56b82dd89ffc1a0073f13b75ed582bcb/finding/20b830830fba04bd78c7ad7f72f2d190&quot;,&#xd;
    &quot;type&quot;: &quot;Backdoor:EC2/DenialOfService.Tcp&quot;,&#xd;
    &quot;resource&quot;: {&#xd;
      &quot;resourceType&quot;: &quot;Instance&quot;,&#xd;
      &quot;instanceDetails&quot;: {&#xd;
        &quot;instanceId&quot;: &quot;i-99999999&quot;,&#xd;
        &quot;instanceType&quot;: &quot;m3.xlarge&quot;,&#xd;
        &quot;launchTime&quot;: &quot;2016-08-02T02:05:06Z&quot;,&#xd;
        &quot;platform&quot;: null,&#xd;
        &quot;productCodes&quot;: [&#xd;
          {&#xd;
            &quot;productCodeId&quot;: &quot;GeneratedFindingProductCodeId&quot;,&#xd;
            &quot;productCodeType&quot;: &quot;GeneratedFindingProductCodeType&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;iamInstanceProfile&quot;: {&#xd;
          &quot;arn&quot;: &quot;GeneratedFindingInstanceProfileArn&quot;,&#xd;
          &quot;id&quot;: &quot;GeneratedFindingInstanceProfileId&quot;&#xd;
        },&#xd;
        &quot;networkInterfaces&quot;: [&#xd;
          {&#xd;
            &quot;networkInterfaceId&quot;: &quot;eni-bfcffe88&quot;,&#xd;
            &quot;privateIpAddresses&quot;: [&#xd;
              {&#xd;
                &quot;privateDnsName&quot;: &quot;GeneratedFindingPrivateName&quot;,&#xd;
                &quot;privateIpAddress&quot;: &quot;10.0.0.1&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;subnetId&quot;: &quot;GeneratedFindingSubnetId&quot;,&#xd;
            &quot;vpcId&quot;: &quot;GeneratedFindingVPCId&quot;,&#xd;
            &quot;privateDnsName&quot;: &quot;GeneratedFindingPrivateDnsName&quot;,&#xd;
            &quot;securityGroups&quot;: [&#xd;
              {&#xd;
                &quot;groupName&quot;: &quot;GeneratedFindingSecurityGroupName&quot;,&#xd;
                &quot;groupId&quot;: &quot;GeneratedFindingSecurityId&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;publicIp&quot;: &quot;198.51.100.0&quot;,&#xd;
            &quot;ipv6Addresses&quot;: [ ],&#xd;
            &quot;publicDnsName&quot;: &quot;GeneratedFindingPublicDNSName&quot;,&#xd;
            &quot;privateIpAddress&quot;: &quot;10.0.0.1&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;tags&quot;: [&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceValue1&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag1&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue2&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag2&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue3&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag3&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue4&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag4&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue5&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag5&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue6&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag6&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue7&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag7&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue8&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag8&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;value&quot;: &quot;GeneratedFindingInstaceTagValue9&quot;,&#xd;
            &quot;key&quot;: &quot;GeneratedFindingInstaceTag9&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;instanceState&quot;: &quot;running&quot;,&#xd;
        &quot;availabilityZone&quot;: &quot;GeneratedFindingInstaceAvailabilityZone&quot;,&#xd;
        &quot;imageId&quot;: &quot;ami-99999999&quot;,&#xd;
        &quot;imageDescription&quot;: &quot;GeneratedFindingInstaceImageDescription&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;service&quot;: {&#xd;
      &quot;serviceName&quot;: &quot;guardduty&quot;,&#xd;
      &quot;detectorId&quot;: &quot;56b82dd89ffc1a0073f13b75ed582bcb&quot;,&#xd;
      &quot;action&quot;: {&#xd;
        &quot;actionType&quot;: &quot;NETWORK_CONNECTION&quot;,&#xd;
        &quot;networkConnectionAction&quot;: {&#xd;
          &quot;connectionDirection&quot;: &quot;OUTBOUND&quot;,&#xd;
          &quot;remoteIpDetails&quot;: {&#xd;
            &quot;ipAddressV4&quot;: &quot;198.51.100.0&quot;,&#xd;
            &quot;organization&quot;: {&#xd;
              &quot;asn&quot;: &quot;-1&quot;,&#xd;
              &quot;asnOrg&quot;: &quot;GeneratedFindingASNOrg&quot;,&#xd;
              &quot;isp&quot;: &quot;GeneratedFindingISP&quot;,&#xd;
              &quot;org&quot;: &quot;GeneratedFindingORG&quot;&#xd;
            },&#xd;
            &quot;country&quot;: {&#xd;
              &quot;countryName&quot;: &quot;GeneratedFindingCountryName&quot;&#xd;
            },&#xd;
            &quot;city&quot;: {&#xd;
              &quot;cityName&quot;: &quot;GeneratedFindingCityName&quot;&#xd;
            },&#xd;
            &quot;geoLocation&quot;: {&#xd;
              &quot;lat&quot;: 0,&#xd;
              &quot;lon&quot;: 0&#xd;
            }&#xd;
          },&#xd;
          &quot;remotePortDetails&quot;: {&#xd;
            &quot;port&quot;: 80,&#xd;
            &quot;portName&quot;: &quot;HTTP&quot;&#xd;
          },&#xd;
          &quot;localPortDetails&quot;: {&#xd;
            &quot;port&quot;: 24198,&#xd;
            &quot;portName&quot;: &quot;Unknown&quot;&#xd;
          },&#xd;
          &quot;protocol&quot;: &quot;TCP&quot;,&#xd;
          &quot;blocked&quot;: false&#xd;
        }&#xd;
      },&#xd;
      &quot;resourceRole&quot;: &quot;ACTOR&quot;,&#xd;
      &quot;additionalInfo&quot;: {&#xd;
        &quot;sample&quot;: true&#xd;
      },&#xd;
      &quot;eventFirstSeen&quot;: &quot;2020-02-20T05:15:56.148Z&quot;,&#xd;
      &quot;eventLastSeen&quot;: &quot;2020-02-27T05:14:32.746Z&quot;,&#xd;
      &quot;archived&quot;: false,&#xd;
      &quot;count&quot;: 12&#xd;
    },&#xd;
    &quot;severity&quot;: 8,&#xd;
    &quot;createdAt&quot;: &quot;2020-02-20T05:15:56.148Z&quot;,&#xd;
    &quot;updatedAt&quot;: &quot;2020-02-27T05:14:32.746Z&quot;,&#xd;
     &quot;title&quot;: &quot;EC2 instance i-99999999 is behaving in a manner that may indicate it is being used to perform a Denial of Service (DoS) attack using TCP protocol. ${__UUID()}&quot;}&quot;&#xd;
    &quot;description&quot;: &quot;EC2 instance i-99999999 is behaving in a manner that may indicate it is being used to perform a Denial of Service (DoS) attack using TCP protocol.&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/guardduty/v1/e3a1ca1c97fce611ee4a32390204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Whatap" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;metricName&quot;: &quot;cpu&quot;,&#xd;
  &quot;pcode&quot;: ${__counter(true,108)},&#xd;
  &quot;level&quot;: &quot;Warning&quot;,&#xd;
  &quot;metricValue&quot;: &quot;26.808296&quot;,&#xd;
  &quot;oid&quot;: ${__counter(true,-1689633475)},&#xd;
  &quot;title&quot;: &quot;WARNING_SERVER_DISK&quot;,&#xd;
  &quot;message&quot;: &quot;/의 디스크 사용율이 41.06156 %로, 경고 임계치를 초과하였습니다.&quot;,&#xd;
  &quot;uuid&quot;: &quot;43be44a66af8468586ea29ec9111755e&quot;,&#xd;
  &quot;metricThreshold&quot;: &quot;10.0&quot;,&#xd;
  &quot;oname&quot;: &quot;devstable-front&quot;,&#xd;
  &quot;time&quot;: 1595913941000,&#xd;
  &quot;projectName&quot;: &quot;OTE-SERVER&quot;,&#xd;
  &quot;status&quot;: &quot;on&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/whatap/v1/239c566c57fcf211ee6a32330204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Oci Monitoring" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;dedupeKey&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;title&quot;: &quot;Up/Down Resource Alarm&quot;,&#xd;
  &quot;body&quot;: &quot; Resource may be down. Please investigate. Move workloads to another available resource.&quot;,&#xd;
  &quot;type&quot;: &quot;OK_TO_FIRING&quot;,&#xd;
  &quot;severity&quot;: &quot;CRITICAL&quot;,&#xd;
  &quot;timestampEpochMillis&quot;: 1670829900000,&#xd;
  &quot;timestamp&quot;: &quot;2022-12-12T07:25:00Z&quot;,&#xd;
  &quot;alarmMetaData&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;ocid1.alarm.oc1.ap-seoul-1.aaaaaaaanht5ienmvpn4n5g7pjdxilthbos5abhdg7ziu3txzakyztmbhkka&quot;,&#xd;
      &quot;status&quot;: &quot;FIRING&quot;,&#xd;
      &quot;severity&quot;: &quot;CRITICAL&quot;,&#xd;
      &quot;namespace&quot;: &quot;oci_autonomous_database&quot;,&#xd;
      &quot;query&quot;: &quot;CpuUtilization[1m].absent()&quot;,&#xd;
      &quot;totalMetricsFiring&quot;: 1,&#xd;
      &quot;dimensions&quot;: [&#xd;
        {&#xd;
          &quot;AutonomousDBType&quot;: &quot;ADW&quot;,&#xd;
          &quot;deploymentType&quot;: &quot;Shared&quot;,&#xd;
          &quot;resourceId&quot;: &quot;OCID1.AUTONOMOUSDATABASE.OC1.AP-SEOUL-1.ANUWGLJRUTEJK7AAO7TR3ZEGBOI3UWKSJOKRFVN75LD5SX343I5AL6F2ZJXQ&quot;,&#xd;
          &quot;resourceName&quot;: &quot;S3UJIC94OS6X3UA7&quot;,&#xd;
          &quot;region&quot;: &quot;ap-seoul-1&quot;,&#xd;
          &quot;displayName&quot;: &quot;CpuUtilization&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;alarmUrl&quot;: &quot;https://cloud.oracle.com/monitoring/alarms/ocid1.alarm.oc1.ap-seoul-1.aaaaaaaanht5ienmvpn4n5g7pjdxilthbos5abhdg7ziu3txzakyztmbhkka?region=ap-seoul-1&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;version&quot;: 1.3&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/ocimonitoring/v1/5115bdeb17fcf111ee7a32350204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Jira Software" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;timestamp&quot;: 1649918171409,&#xd;
  &quot;webhookEvent&quot;: &quot;jira:issue_created&quot;,&#xd;
  &quot;issue_event_type_name&quot;: &quot;issue_created&quot;,&#xd;
  &quot;user&quot;: {&#xd;
    &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/user?accountId=61849307a6ecfc0071fbe72e&quot;,&#xd;
    &quot;accountId&quot;: &quot;61849307a6ecfc0071fbe72e&quot;,&#xd;
    &quot;avatarUrls&quot;: {&#xd;
      &quot;48x48&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
      &quot;24x24&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
      &quot;16x16&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
      &quot;32x32&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;&#xd;
    },&#xd;
    &quot;displayName&quot;: &quot;이혜영&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;timeZone&quot;: &quot;Asia/Seoul&quot;,&#xd;
    &quot;accountType&quot;: &quot;atlassian&quot;&#xd;
  },&#xd;
  &quot;issue&quot;: {&#xd;
     &quot;id&quot;: &quot;10417_${__UUID()}&quot;,&#xd;
    &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/10417&quot;,&#xd;
    &quot;key&quot;: &quot;AJS-1&quot;,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;statuscategorychangedate&quot;: &quot;2022-04-14T15:36:11.544+0900&quot;,&#xd;
      &quot;customfield_10070&quot;: null,&#xd;
      &quot;customfield_10071&quot;: null,&#xd;
      &quot;customfield_10072&quot;: null,&#xd;
      &quot;fixVersions&quot;: [],&#xd;
      &quot;resolution&quot;: null,&#xd;
      &quot;lastViewed&quot;: null,&#xd;
      &quot;customfield_10060&quot;: null,&#xd;
      &quot;customfield_10061&quot;: null,&#xd;
      &quot;customfield_10062&quot;: null,&#xd;
      &quot;customfield_10063&quot;: null,&#xd;
      &quot;customfield_10064&quot;: null,&#xd;
      &quot;customfield_10065&quot;: null,&#xd;
      &quot;customfield_10066&quot;: null,&#xd;
      &quot;customfield_10067&quot;: null,&#xd;
      &quot;priority&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/priority/3&quot;,&#xd;
        &quot;iconUrl&quot;: &quot;https://alertnowdev.atlassian.net/images/icons/priorities/medium.svg&quot;,&#xd;
        &quot;name&quot;: &quot;Medium&quot;,&#xd;
        &quot;id&quot;: &quot;3&quot;&#xd;
      },&#xd;
      &quot;customfield_10068&quot;: null,&#xd;
      &quot;customfield_10069&quot;: null,&#xd;
      &quot;labels&quot;: [&quot;fromAN&quot;],&#xd;
      &quot;timeestimate&quot;: null,&#xd;
      &quot;aggregatetimeoriginalestimate&quot;: null,&#xd;
      &quot;versions&quot;: [],&#xd;
      &quot;issuelinks&quot;: [],&#xd;
      &quot;assignee&quot;: null,&#xd;
      &quot;status&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/status/10093&quot;,&#xd;
        &quot;description&quot;: &quot;&quot;,&#xd;
        &quot;iconUrl&quot;: &quot;https://alertnowdev.atlassian.net/&quot;,&#xd;
        &quot;name&quot;: &quot;To Do&quot;,&#xd;
        &quot;id&quot;: &quot;10093&quot;,&#xd;
        &quot;statusCategory&quot;: {&#xd;
          &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/statuscategory/2&quot;,&#xd;
          &quot;id&quot;: 2,&#xd;
          &quot;key&quot;: &quot;new&quot;,&#xd;
          &quot;colorName&quot;: &quot;blue-gray&quot;,&#xd;
          &quot;name&quot;: &quot;New&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;components&quot;: [],&#xd;
      &quot;customfield_10050&quot;: null,&#xd;
      &quot;customfield_10051&quot;: null,&#xd;
      &quot;customfield_10052&quot;: null,&#xd;
      &quot;customfield_10053&quot;: null,&#xd;
      &quot;customfield_10054&quot;: null,&#xd;
      &quot;customfield_10055&quot;: null,&#xd;
      &quot;customfield_10056&quot;: null,&#xd;
      &quot;customfield_10057&quot;: null,&#xd;
      &quot;customfield_10058&quot;: null,&#xd;
      &quot;customfield_10059&quot;: null,&#xd;
      &quot;customfield_10049&quot;: null,&#xd;
      &quot;aggregatetimeestimate&quot;: null,&#xd;
      &quot;creator&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/user?accountId=61849307a6ecfc0071fbe72e&quot;,&#xd;
        &quot;accountId&quot;: &quot;61849307a6ecfc0071fbe72e&quot;,&#xd;
        &quot;avatarUrls&quot;: {&#xd;
          &quot;48x48&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;24x24&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;16x16&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;32x32&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;&#xd;
        },&#xd;
        &quot;displayName&quot;: &quot;이혜영&quot;,&#xd;
        &quot;active&quot;: true,&#xd;
        &quot;timeZone&quot;: &quot;Asia/Seoul&quot;,&#xd;
        &quot;accountType&quot;: &quot;atlassian&quot;&#xd;
      },&#xd;
      &quot;subtasks&quot;: [],&#xd;
      &quot;customfield_10040&quot;: null,&#xd;
      &quot;customfield_10041&quot;: null,&#xd;
      &quot;customfield_10042&quot;: null,&#xd;
      &quot;reporter&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/user?accountId=61849307a6ecfc0071fbe72e&quot;,&#xd;
        &quot;accountId&quot;: &quot;61849307a6ecfc0071fbe72e&quot;,&#xd;
        &quot;avatarUrls&quot;: {&#xd;
          &quot;48x48&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;24x24&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;16x16&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;,&#xd;
          &quot;32x32&quot;: &quot;https://secure.gravatar.com/avatar/a557ea178ed9ae7de2340ef5898fc518?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FL-3.png&quot;&#xd;
        },&#xd;
        &quot;displayName&quot;: &quot;이혜영&quot;,&#xd;
        &quot;active&quot;: true,&#xd;
        &quot;timeZone&quot;: &quot;Asia/Seoul&quot;,&#xd;
        &quot;accountType&quot;: &quot;atlassian&quot;&#xd;
      },&#xd;
      &quot;customfield_10043&quot;: null,&#xd;
      &quot;customfield_10044&quot;: null,&#xd;
      &quot;aggregateprogress&quot;: {&#xd;
        &quot;progress&quot;: 0,&#xd;
        &quot;total&quot;: 0&#xd;
      },&#xd;
      &quot;customfield_10045&quot;: null,&#xd;
      &quot;customfield_10046&quot;: null,&#xd;
      &quot;customfield_10047&quot;: null,&#xd;
      &quot;customfield_10048&quot;: null,&#xd;
      &quot;customfield_10039&quot;: [],&#xd;
      &quot;progress&quot;: {&#xd;
        &quot;progress&quot;: 0,&#xd;
        &quot;total&quot;: 0&#xd;
      },&#xd;
      &quot;votes&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/issue/AJS-1/votes&quot;,&#xd;
        &quot;votes&quot;: 0,&#xd;
        &quot;hasVoted&quot;: false&#xd;
      },&#xd;
      &quot;issuetype&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/issuetype/10039&quot;,&#xd;
        &quot;id&quot;: &quot;10039&quot;,&#xd;
        &quot;description&quot;: &quot;작업은 소규모 개별 업무를 추적합니다.&quot;,&#xd;
        &quot;iconUrl&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium&quot;,&#xd;
        &quot;name&quot;: &quot;작업&quot;,&#xd;
        &quot;subtask&quot;: false,&#xd;
        &quot;avatarId&quot;: 10318,&#xd;
        &quot;entityId&quot;: &quot;4c367b63-ea41-4e1f-9d4a-5c107d4c88eb&quot;,&#xd;
        &quot;hierarchyLevel&quot;: 0&#xd;
      },&#xd;
      &quot;timespent&quot;: null,&#xd;
      &quot;customfield_10030&quot;: null,&#xd;
      &quot;project&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/project/10013&quot;,&#xd;
        &quot;id&quot;: &quot;10013&quot;,&#xd;
        &quot;key&quot;: &quot;AJS&quot;,&#xd;
        &quot;name&quot;: &quot;AlertNow Jira Software&quot;,&#xd;
        &quot;projectTypeKey&quot;: &quot;software&quot;,&#xd;
        &quot;simplified&quot;: true,&#xd;
        &quot;avatarUrls&quot;: {&#xd;
          &quot;48x48&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10407&quot;,&#xd;
          &quot;24x24&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10407?size=small&quot;,&#xd;
          &quot;16x16&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10407?size=xsmall&quot;,&#xd;
          &quot;32x32&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10407?size=medium&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;customfield_10033&quot;: null,&#xd;
      &quot;customfield_10034&quot;: null,&#xd;
      &quot;aggregatetimespent&quot;: null,&#xd;
      &quot;customfield_10035&quot;: null,&#xd;
      &quot;customfield_10036&quot;: null,&#xd;
      &quot;customfield_10037&quot;: null,&#xd;
      &quot;customfield_10027&quot;: [],&#xd;
      &quot;customfield_10028&quot;: null,&#xd;
      &quot;customfield_10029&quot;: null,&#xd;
      &quot;resolutiondate&quot;: null,&#xd;
      &quot;workratio&quot;: -1,&#xd;
      &quot;issuerestriction&quot;: {&#xd;
        &quot;issuerestrictions&quot;: {},&#xd;
        &quot;shouldDisplay&quot;: true&#xd;
      },&#xd;
      &quot;watches&quot;: {&#xd;
        &quot;self&quot;: &quot;https://alertnowdev.atlassian.net/rest/api/2/issue/AJS-1/watchers&quot;,&#xd;
        &quot;watchCount&quot;: 0,&#xd;
        &quot;isWatching&quot;: true&#xd;
      },&#xd;
      &quot;created&quot;: &quot;2022-04-14T15:36:10.275+0900&quot;,&#xd;
      &quot;customfield_10020&quot;: null,&#xd;
      &quot;customfield_10021&quot;: null,&#xd;
      &quot;customfield_10022&quot;: null,&#xd;
      &quot;customfield_10023&quot;: null,&#xd;
      &quot;customfield_10024&quot;: null,&#xd;
      &quot;customfield_10025&quot;: null,&#xd;
      &quot;customfield_10026&quot;: null,&#xd;
      &quot;customfield_10016&quot;: null,&#xd;
      &quot;customfield_10017&quot;: null,&#xd;
      &quot;customfield_10018&quot;: {&#xd;
        &quot;hasEpicLinkFieldDependency&quot;: false,&#xd;
        &quot;showField&quot;: false,&#xd;
        &quot;nonEditableReason&quot;: {&#xd;
          &quot;reason&quot;: &quot;PLUGIN_LICENSE_ERROR&quot;,&#xd;
          &quot;message&quot;: &quot;상위 링크는 Jira Premium 사용자만 이용할 수 있습니다.&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;customfield_10019&quot;: &quot;0|i002i7:&quot;,&#xd;
      &quot;updated&quot;: &quot;2022-04-14T15:36:10.275+0900&quot;,&#xd;
      &quot;timeoriginalestimate&quot;: null,&#xd;
      &quot;description&quot;: &quot;sdfsdfsdf&quot;,&#xd;
      &quot;customfield_10010&quot;: null,&#xd;
      &quot;customfield_10014&quot;: null,&#xd;
      &quot;customfield_10015&quot;: null,&#xd;
      &quot;timetracking&quot;: {},&#xd;
      &quot;customfield_10005&quot;: null,&#xd;
      &quot;customfield_10006&quot;: null,&#xd;
      &quot;customfield_10007&quot;: null,&#xd;
      &quot;security&quot;: null,&#xd;
      &quot;customfield_10008&quot;: null,&#xd;
      &quot;attachment&quot;: [],&#xd;
      &quot;customfield_10009&quot;: null,&#xd;
      &quot;summary&quot;: &quot;Jira Software #01&quot;,&#xd;
      &quot;customfield_10000&quot;: &quot;{}&quot;,&#xd;
      &quot;customfield_10001&quot;: null,&#xd;
      &quot;customfield_10002&quot;: null,&#xd;
      &quot;customfield_10003&quot;: null,&#xd;
      &quot;customfield_10004&quot;: null,&#xd;
      &quot;environment&quot;: null,&#xd;
      &quot;duedate&quot;: null&#xd;
    }&#xd;
  },&#xd;
  &quot;changelog&quot;: {&#xd;
    &quot;id&quot;: &quot;10692&quot;,&#xd;
    &quot;items&quot;: [&#xd;
      {&#xd;
        &quot;field&quot;: &quot;description&quot;,&#xd;
        &quot;fieldtype&quot;: &quot;jira&quot;,&#xd;
        &quot;fieldId&quot;: &quot;description&quot;,&#xd;
        &quot;from&quot;: null,&#xd;
        &quot;fromString&quot;: null,&#xd;
        &quot;to&quot;: null,&#xd;
        &quot;toString&quot;: &quot;sdfsdfsdf&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;field&quot;: &quot;priority&quot;,&#xd;
        &quot;fieldtype&quot;: &quot;jira&quot;,&#xd;
        &quot;fieldId&quot;: &quot;priority&quot;,&#xd;
        &quot;from&quot;: null,&#xd;
        &quot;fromString&quot;: null,&#xd;
        &quot;to&quot;: &quot;3&quot;,&#xd;
        &quot;toString&quot;: &quot;Medium&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;field&quot;: &quot;reporter&quot;,&#xd;
        &quot;fieldtype&quot;: &quot;jira&quot;,&#xd;
        &quot;fieldId&quot;: &quot;reporter&quot;,&#xd;
        &quot;from&quot;: null,&#xd;
        &quot;fromString&quot;: null,&#xd;
        &quot;to&quot;: &quot;61849307a6ecfc0071fbe72e&quot;,&#xd;
        &quot;toString&quot;: &quot;이혜영&quot;,&#xd;
        &quot;tmpFromAccountId&quot;: null,&#xd;
        &quot;tmpToAccountId&quot;: &quot;61849307a6ecfc0071fbe72e&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;field&quot;: &quot;상태&quot;,&#xd;
        &quot;fieldtype&quot;: &quot;jira&quot;,&#xd;
        &quot;fieldId&quot;: &quot;status&quot;,&#xd;
        &quot;from&quot;: null,&#xd;
        &quot;fromString&quot;: null,&#xd;
        &quot;to&quot;: &quot;10093&quot;,&#xd;
        &quot;toString&quot;: &quot;To Do&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;field&quot;: &quot;summary&quot;,&#xd;
        &quot;fieldtype&quot;: &quot;jira&quot;,&#xd;
        &quot;fieldId&quot;: &quot;summary&quot;,&#xd;
        &quot;from&quot;: null,&#xd;
        &quot;fromString&quot;: null,&#xd;
        &quot;to&quot;: null,&#xd;
        &quot;toString&quot;: &quot;Jira Software #01&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/jirasoftware/v1/80bd542147fcf211ee1a32390204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Tencent" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;alarmObjInfo&quot;: {&#xd;
    &quot;dimensions&quot;: {&#xd;
      &quot;objId&quot;: &quot;a43a1215-cdb2-485b-9fbb-8f958d5f0a1b&quot;,&#xd;
      &quot;objName&quot;: &quot;10.0.3.15#3856472&quot;,&#xd;
      &quot;unInstanceId&quot;: &quot;ins-p8q5ipab&quot;&#xd;
    },&#xd;
    &quot;namespace&quot;: &quot;qce/cvm&quot;,&#xd;
    &quot;region&quot;: &quot;bj&quot;&#xd;
  },&#xd;
  &quot;alarmPolicyInfo&quot;: {&#xd;
    &quot;conditions&quot;: {&#xd;
      &quot;alarmNotifyPeriod&quot;: 1,&#xd;
      &quot;alarmNotifyType&quot;: &quot;singleAlarm&quot;,&#xd;
      &quot;calcType&quot;: &quot;&gt;&quot;,&#xd;
      &quot;calcValue&quot;: &quot;60&quot;,&#xd;
      &quot;currentValue&quot;: &quot;100&quot;,&#xd;
      &quot;metricName&quot;: &quot;cpu_usage&quot;,&#xd;
      &quot;metricShowName&quot;: &quot;CPU利用率&quot;,&#xd;
      &quot;period&quot;: &quot;60&quot;,&#xd;
      &quot;periodNum&quot;: &quot;1&quot;,&#xd;
      &quot;unit&quot;: &quot;%&quot;&#xd;
    },&#xd;
    &quot;policyId&quot;: &quot;policy-fjwi7tx5&quot;,&#xd;
    &quot;policyName&quot;: &quot;alertnowtest&quot;,&#xd;
    &quot;policyType&quot;: &quot;cvm_device&quot;,&#xd;
    &quot;policyTypeCName&quot;: &quot;云服务器-基础监控&quot;,&#xd;
    &quot;policyTypeEname&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;alarmStatus&quot;: &quot;1&quot;,&#xd;
  &quot;alarmType&quot;: &quot;metric&quot;,&#xd;
  &quot;durationTime&quot;: 0,&#xd;
  &quot;firstOccurTime&quot;: &quot;2021-06-10 15:53:00&quot;,&#xd;
  &quot;recoverTime&quot;: &quot;0&quot;,&#xd;
  &quot;sessionId&quot;: &quot;${__UUID()}&quot;.substring(0, 24),&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/tencent/v1/b4c2a5ee77fcf511ee7a32370204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Zabbix" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subject&quot;: &quot;Problem: Processor load is too high on Zabbix server&quot;,&#xd;
  &quot;message&quot;: {&#xd;
    &quot;eventDt&quot;: &quot;Problem started at 07:31:09 on 2021.03.25&quot;,&#xd;
    &quot;eventName&quot;: &quot;Processor load is too high on Zabbix server&quot;,&#xd;
    &quot;host&quot;: &quot;Zabbix server&quot;,&#xd;
    &quot;severity&quot;: &quot;Warning&quot;,&#xd;
    &quot;eventId&quot;: &quot;${__time()}${__Random(100000,999999)}&quot;,&#xd;
    &quot;eventStatus&quot;: &quot;open&quot;,&#xd;
    &quot;triggerUrl&quot;: &quot;http://zabbix_ip_here/zabbix/tr_events.php?triggerid=16122&amp;eventid=390&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/zabbix/v1/d5a5cab567fcf911ee5a32390204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Zenius" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;summary&quot;: &quot;Threshold Crossed: 1 datapoint [31.84234972677596 (19/12/19 17:40:00)] was greater than or equal to the threshold (90.0)&quot;,&#xd;
  &quot;event_id&quot;: &quot;${__time()}_${__Random(100000,999999)}&quot;,&#xd;
  &quot;status&quot;: &quot;open&quot;,&#xd;
  &quot;urgency&quot;: &quot;high&quot;,&#xd;
  &quot;event_time&quot;: &quot;2019-12-19T17:40:00+09:00&quot;,&#xd;
  &quot;metric_name&quot;: &quot;CPUUtilization&quot;,&#xd;
  &quot;threshold&quot;: &quot;90&quot;,&#xd;
  &quot;metric_value&quot;: &quot;93.1&quot;,&#xd;
  &quot;resource_name&quot;: &quot;i-9c09acd49a25&quot;,&#xd;
  &quot;event_type&quot;: &quot;INFO&quot;,&#xd;
  &quot;custom_details&quot;: {&#xd;
    &quot;ping time&quot;: &quot;1500ms&quot;,&#xd;
    &quot;load avg&quot;: &quot;0.75&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/zenius/v1/fd0bf2a947fcf611ee7a32370204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Jennifer4" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;group_type&quot;: &quot;MESSAGE_${__UUID()}&quot;,&#xd;
  &quot;error_type&quot;: &quot;SYSTEM_MESSAGE_${__UUID()}&quot;,&#xd;
  &quot;skip_count&quot;: 0,&#xd;
  &quot;time&quot;: 1588053039441,&#xd;
  &quot;group_type_key&quot;: 4,&#xd;
  &quot;value&quot;: -1,&#xd;
  &quot;type&quot;: 99,&#xd;
  &quot;agentname&quot;: &quot;J12_${__UUID()}&quot;,&#xd;
  &quot;msg&quot;: &quot;PROCESS START&quot;,&#xd;
  &quot;tx_uuid&quot;: 0&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/jennifer4/v1/50ad36f837fd0111ee6a32360204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Scouter" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;title&quot;:&quot;Elapsed time exceed a threshold. ${__UUID()}&quot;,&#xd;
  &quot;summary&quot;:&quot;[/SEOUL-A-DEV-LIGHTSABER-ALARM-OPENAPI-WAS01/openapi_01] -1273567123(/api/v1/{cmpnNo}/common/recent/menu&lt;POST&gt;) elapsed time(3015 ms) exceed a threshold.&quot;,&#xd;
  &quot;event_time&quot;:&quot;1584691441703&quot;,&#xd;
  &quot;event_type&quot;: &quot;WARN_${__UUID()}&quot;,&#xd;
  &quot;type&quot;:&quot;TOMCAT&quot;,&#xd;
  &quot;resource_name&quot;:&quot;/SEOUL-A-DEV-LIGHTSABER-ALARM-OPENAPI-WAS01/openapi_01/${__UUID()}&quot;,&#xd;
  &quot;urgency&quot;:&quot;medium&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/scouter/v1/cfed4f2787fd0611ee3a32380204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Email" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;notificationType&quot;: &quot;Received&quot;,&#xd;
  &quot;mail&quot;: {&#xd;
    &quot;timestamp&quot;: &quot;2020-03-09T04:04:34.886Z&quot;,&#xd;
    &quot;source&quot;: &quot;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com&quot;,&#xd;
    &quot;messageId&quot;: &quot;0kt7ips1kkkkomdn0camj029vsf54ss3hm71q8o1&quot;,&#xd;
    &quot;destination&quot;: [&#xd;
      &quot;alert.email.1e7ae7@receivealertnow.com&quot;&#xd;
    ],&#xd;
    &quot;headersTruncated&quot;: false,&#xd;
    &quot;headers&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Return-Path&quot;,&#xd;
        &quot;value&quot;: &quot;&lt;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com&gt;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Received&quot;,&#xd;
        &quot;value&quot;: &quot;from a48-37.smtp-out.amazonses.com (a48-37.smtp-out.amazonses.com [54.240.48.37]) by inbound-smtp.us-west-2.amazonaws.com with SMTP id 0kt7ips1kkkkomdn0camj029vsf54ss3hm71q8o1 for alert.email.1e7ae7@receivealertnow.com; Fri, 06 Mar 2020 05:04:34 +0000 (UTC)&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;X-SES-Spam-Verdict&quot;,&#xd;
        &quot;value&quot;: &quot;PASS&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;X-SES-Virus-Verdict&quot;,&#xd;
        &quot;value&quot;: &quot;PASS&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Received-SPF&quot;,&#xd;
        &quot;value&quot;: &quot;pass (spfCheck: domain of amazonses.com designates 54.240.48.37 as permitted sender) client-ip=54.240.48.37; envelope-from=01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com; helo=a48-37.smtp-out.amazonses.com;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Authentication-Results&quot;,&#xd;
        &quot;value&quot;: &quot;amazonses.com; spf=pass (spfCheck: domain of amazonses.com designates 54.240.48.37 as permitted sender) client-ip=54.240.48.37; envelope-from=01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com; helo=a48-37.smtp-out.amazonses.com; dkim=pass header.i=@amazonses.com; dmarc=none header.from=jennifersoft.com;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;X-SES-RECEIPT&quot;,&#xd;
        &quot;value&quot;: &quot;AEFBQ       UFBQUFBQUFFSEN5cENnYStCZEVNTG1SaHQvNE9mZWpFd1Z2ek5DV1p5OG9WQlVxTWZsTGZCbSsrUEpxSFg4cjVwSytlMkxCeC9FVTF1SVpkaEwxazY0cUQ5VS9GdE9PMlJFb0RiV0drZEFTdU5WZHZid2N5NDJWL05YbEIwaGF4T3FQeHR4bjE4cHhJN2xqTmtLQzVWTGNRd3FPVE8vb3E1L0ZQZ0U1c3Q1MWsvNTFrcWNtRjZtbWNueVJteUpSM1BaQVlx       U0dFcGQyZTVDNFNIN0dXS1NJOXMyc1pXa050V0tJNHBTcWJRbksxWXd3bHdXUEU0MmRMTmhMZUUyYU8rTTU4aHk4aFk0dEhKVGZkWmU4TFU1dEExL01FZCt0L3l3bkFUd3N0RnBMZ0FneXNhcVlvYUtsNzNWRXYzbWtBVXZrVE1BTFdHSlhwQUVnQ3QrOVE1c3BlanN0K29QZVlGTm5BL2NPYklZV05ibG9wMXlBPT0=&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;X-SES-DKIM-SIGNATURE&quot;,&#xd;
        &quot;value&quot;: &quot;a=rsa-sha256; q=dns/txt; b=BgxhvHCgkeIUsyUrn5q3wlPDpZJT4rwelPih6stKgS9iTcf4jFed3l1NcNmXFDeKkOMhiaX5IEdi7oKkF6wMOiNIVBqQXsfdD6zLBu4FA+vTGUDL2IvsAUrA72tizOFNz5cOhRy9rCDb9HHsE744j+RRJVg9WNCYU2ZXgMrWaNc=; c=relaxed/simple; s=gdwg2y3kokkkj5a55z2ilkup5wp5hhxx; d=amazonses.com; t=1583471075; v=1; bh=VtO3dc4zaK3nXg+kAff6ptlaXh8o2MTcnTkpm+Z1KuY=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;DKIM-Signature&quot;,&#xd;
        &quot;value&quot;: &quot;v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple; s=6gbrjpgwjskckoa6a5zn6fwqkn67xbtw; d=amazonses.com; t=1583471073; h=Date:From:To:Message-ID:Subject:MIME-Version:Content-Type:Content-Transfer-Encoding:Feedback-ID; bh=VtO3dc4zaK3nXg+kAff6ptlaXh8o2MTcnTkpm+Z1KuY=; b=My2KSiG3wXQ+eemOuPZ68SPyITU8htEYlsrTHQYvGJtHYVPWmWwPwXMYxQm/Gy37uKi1979nCR6HOOx2XiuXM2TR64phxNyTvROmEPe1FmLLuvD07tU+lS9gF7eSvR9gqYVO8fWCapBr7ehk9Y7z8vGLBBNQddMS5ivxXY17eqQ=&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Date&quot;,&#xd;
        &quot;value&quot;: &quot;Fri, 6 Mar 2020 05:04:33 +0000&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;From&quot;,&#xd;
        &quot;value&quot;: &quot;\&quot;soyoung.ahn\&quot; &lt;alert@jennifersoft.com&gt;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;To&quot;,&#xd;
        &quot;value&quot;: &quot;alert.email.1e7ae7@receivealertnow.com&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Message-ID&quot;,&#xd;
        &quot;value&quot;: &quot;&lt;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@email.amazonses.com&gt;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Subject&quot;,&#xd;
        &quot;value&quot;: &quot;얼럿얼럿한 Email- Jennifer 5 Alert Monitoring Service \&quot;&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MIME-Version&quot;,&#xd;
        &quot;value&quot;: &quot;1.0&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Content-Type&quot;,&#xd;
        &quot;value&quot;: &quot;text/html; charset=utf-8&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Content-Transfer-Encoding&quot;,&#xd;
        &quot;value&quot;: &quot;7bit&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;X-SES-Outgoing&quot;,&#xd;
        &quot;value&quot;: &quot;2020.03.06-54.240.48.37&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Feedback-ID&quot;,&#xd;
        &quot;value&quot;: &quot;1.us-east-1.pqqkCKIixEMbFkUY2E3cm40ULLlZjdk9tCdypMLEh5g=:AmazonSES&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;commonHeaders&quot;: {&#xd;
      &quot;returnPath&quot;: &quot;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com&quot;,&#xd;
      &quot;from&quot;: [&#xd;
        &quot;\&quot;soyoung.ahn\&quot; &lt;alert@jennifersoft.com&gt;&quot;&#xd;
      ],&#xd;
      &quot;date&quot;: &quot;Fri, 6 Mar 2020 05:04:33 +0000&quot;,&#xd;
      &quot;to&quot;: [&#xd;
        &quot;alert.email.1e7ae7@receivealertnow.com&quot;&#xd;
      ],&#xd;
      &quot;messageId&quot;: &quot;&lt;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@email.amazonses.com&gt;&quot;,&#xd;
      &quot;subject&quot;: &quot;얼럿얼럿한 Email - Jennifer 5 Alert Monitoring Service \&quot;&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;receipt&quot;: {&#xd;
    &quot;timestamp&quot;: &quot;2020-03-06T05:04:34.886Z&quot;,&#xd;
    &quot;processingTimeMillis&quot;: 1100,&#xd;
    &quot;recipients&quot;: [&#xd;
      &quot;alert.email.1e7ae7@receivealertnow.com&quot;&#xd;
    ],&#xd;
    &quot;spamVerdict&quot;: {&#xd;
      &quot;status&quot;: &quot;PASS&quot;&#xd;
    },&#xd;
    &quot;virusVerdict&quot;: {&#xd;
      &quot;status&quot;: &quot;PASS&quot;&#xd;
    },&#xd;
    &quot;spfVerdict&quot;: {&#xd;
      &quot;status&quot;: &quot;PASS&quot;&#xd;
    },&#xd;
    &quot;dkimVerdict&quot;: {&#xd;
      &quot;status&quot;: &quot;GRAY&quot;&#xd;
    },&#xd;
    &quot;dmarcVerdict&quot;: {&#xd;
      &quot;status&quot;: &quot;GRAY&quot;&#xd;
    },&#xd;
    &quot;action&quot;: {&#xd;
      &quot;type&quot;: &quot;SNS&quot;,&#xd;
      &quot;topicArn&quot;: &quot;arn:aws:sns:us-west-2:567066324238:EmailIntegration2&quot;,&#xd;
      &quot;encoding&quot;: &quot;UTF8&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;content&quot;: &quot;Return-Path: &lt;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com&gt;\r\nReceived: from a48-37.smtp-out.amazonses.com (a48-37.smtp-out.amazonses.com [54.240.48.37])\r\n by inbound-smtp.us-west-2.amazonaws.com with SMTP id 0kt7ips1kkkkomdn0camj029vsf54ss3hm71q8o1\r\n for alert.email.1e7ae7@receivealertnow.com;\r\n Fri, 06 Mar 2020 05:04:34 +0000 (UTC)\r\nX-SES-Spam-Verdict: PASS\r\nX-SES-Virus-Verdict: PASS\r\nReceived-SPF: pass (spfCheck: domain of amazonses.com designates 54.240.48.37 as permitted sender) client-ip=54.240.48.37; envelope-from=01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com; helo=a48-37.smtp-out.amazonses.com;\r\nAuthentication-Results: amazonses.com;\r\n spf=pass (spfCheck: domain of amazonses.com designates 54.240.48.37 as permitted sender) client-ip=54.240.48.37; envelope-from=01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@amazonses.com; helo=a48-37.smtp-out.amazonses.com;\r\n dkim=pass header.i=@amazonses.com;\r\n dmarc=none header.from=jennifersoft.com;\r\nX-SES-RECEIPT: AEFBQUFBQUFBQUFFSEN5cENnYStCZEVNTG1SaHQvNE9mZWpFd1Z2ek5DV1p5OG9WQlVxTWZsTGZCbSsrUEpxSFg4cjVwSytlMkxCeC9FVTF1SVpkaEwxazY0cUQ5VS9GdE9PMlJFb0RiV0drZEFTdU5WZHZid2N5NDJWL05YbEIwaGF4T3FQeHR4bjE4cHhJN2xqTmtLQzVWTGNRd3FPVE8vb3E1L0ZQZ0U1c3Q1MWsvNTFrcWNtRjZtbWNueVJteUpSM1BaQVlxU0dFcGQyZTVDNFNIN0dXS1NJOXMyc1pXa050V0tJNHBTcWJRbksxWXd3bHdXUEU0MmRMTmhMZUUyYU8rTTU4aHk4aFk0dEhKVGZkWmU4TFU1dEExL01FZCt0L3l3bkFUd3N0RnBMZ0FneXNhcVlvYUtsNzNWRXYzbWtBVXZrVE1BTFdHSlhwQUVnQ3QrOVE1c3BlanN0K29QZVlGTm5BL2NPYklZV05ibG9wMXlBPT0=\r\nX-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=BgxhvHCgkeIUsyUrn5q3wlPDpZJT4rwelPih6stKgS9iTcf4jFed3l1NcNmXFDeKkOMhiaX5IEdi7oKkF6wMOiNIVBqQXsfdD6zLBu4FA+vTGUDL2IvsAUrA72tizOFNz5cOhRy9rCDb9HHsE744j+RRJVg9WNCYU2ZXgMrWaNc=; c=relaxed/simple; s=gdwg2y3kokkkj5a55z2ilkup5wp5hhxx; d=amazonses.com; t=1583471075; v=1; bh=VtO3dc4zaK3nXg+kAff6ptlaXh8o2MTcnTkpm+Z1KuY=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;\r\nDKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple;\r\n\ts=6gbrjpgwjskckoa6a5zn6fwqkn67xbtw; d=amazonses.com; t=1583471073;\r\n\th=Date:From:To:Message-ID:Subject:MIME-Version:Content-Type:Content-Transfer-Encoding:Feedback-ID;\r\n\tbh=VtO3dc4zaK3nXg+kAff6ptlaXh8o2MTcnTkpm+Z1KuY=;\r\n\tb=My2KSiG3wXQ+eemOuPZ68SPyITU8htEYlsrTHQYvGJtHYVPWmWwPwXMYxQm/Gy37\r\n\tuKi1979nCR6HOOx2XiuXM2TR64phxNyTvROmEPe1FmLLuvD07tU+lS9gF7eSvR9gqYV\r\n\tO8fWCapBr7ehk9Y7z8vGLBBNQddMS5ivxXY17eqQ=\r\nDate: Fri, 6 Mar 2020 05:04:33 +0000\r\nFrom: \&quot;soyoung.ahn\&quot; &lt;alert@jennifersoft.com&gt;\r\nTo: alert.email.1e7ae7@receivealertnow.com\r\nMessage-ID: &lt;01000170ae3b18f2-55e9b39b-1e6e-4cca-af90-528cdad0632f-000000@email.amazonses.com&gt;\r\nSubject: =?utf-8?Q?=EC=96=BC=EB=9F=BF=EC=96=BC=EB=9F=BF=ED=95=9C_Email_?=\r\n =?utf-8?Q?-_Jennifer_5_?= =?utf-8?Q?Alert_Monitoring_Service_\&quot;?=\r\nMIME-Version: 1.0\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: 7bit\r\nX-SES-Outgoing: 2020.03.06-54.240.48.37\r\nFeedback-ID: 1.us-east-1.pqqkCKIixEMbFkUY2E3cm40ULLlZjdk9tCdypMLEh5g=:AmazonSES\r\n\r\n&lt;div style=&apos;font-family: arial; background-color: #f5f5f5; padding: 26px 26px 46px 26px;&apos;&gt;\t\t&lt;div style=&apos;border-radius: 4px; border: 1px solid #dbdbdb;&apos;&gt;\t\t\t&lt;div style=&apos;padding: 20px; border-bottom: 1px solid #e8e8e8; background-color: #fafafa; border-top-left-radius: 4px; border-top-right-radius: 4px;&apos;&gt;\t\t\t\t&lt;div style=&apos;font-size: 16px; font-weight: bold; color: #333;&apos;&gt;얼럿얼럿한 Email - Jennifer 5 Alert Monitoring Service \&quot;&lt;/div&gt;\t\t\t\t&lt;div style=&apos;font-size: 12px; color: #666;&apos;&gt;2020-03-06 05:04:29&lt;/div&gt;\t\t\t&lt;/div&gt;\t\t\t&lt;div style=&apos;padding: 30px 40px 1px 40px; background-color: #fff; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px;&apos;&gt;\t\t\t&lt;div style=&apos;font-size: 12px; color: #333; border-top: 1px solid #e8e8e8; padding: 5px 0px; clear: both; height: 13px;&apos;&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box; width: 200px; font-weight: bold;&apos;&gt;Domain ID&lt;/div&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box;&apos;&gt;1000&lt;/div&gt;\t\t\t&lt;/div&gt;\t\t\t&lt;div style=&apos;font-size: 12px; color: #333; border-top: 1px solid #e8e8e8; padding: 5px 0px; clear: both; height: 13px;&apos;&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box; width: 200px; font-weight: bold;&apos;&gt;Domain Name&lt;/div&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box;&apos;&gt;Data Server&lt;/div&gt;\t\t\t&lt;/div&gt;\t\t\t&lt;div style=&apos;font-size: 12px; color: #333; border-top: 1px solid #e8e8e8; padding: 5px 0px; clear: both; height: 13px;&apos;&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box; width: 200px; font-weight: bold;&apos;&gt;Instance ID&lt;/div&gt;\t\t\t\t&lt;div style=&apos;position: relative; float: left; box-sizing: border-box;&apos;&gt;9&lt;/div&gt;\t\t\t&lt;/div&gt;\t\t\t&lt;div style=&apos;font-size: 12px; color: #333; border-top: 1px solid #e8e8e8; padding: 5px 0px; clear: both; height: 13px;&apos;&gt;\t\t\t\t&lt;div styl&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Kapacitor" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;:&quot;${__UUID()}&quot;,&#xd;
  &quot;message&quot;:&quot;cpu:nil is CRITICAL&quot;,&#xd;
  &quot;details&quot;:&quot;{\u0026#34;Name\u0026#34;:\u0026#34;cpu\u0026#34;,\u0026#34;TaskName\u0026#34;:\u0026#34;alertnow_cpu_alert\u0026#34;,\u0026#34;Group\u0026#34;:\u0026#34;nil\u0026#34;,\u0026#34;Tags\u0026#34;:{\u0026#34;cpu\u0026#34;:\u0026#34;cpu0\u0026#34;,\u0026#34;host\u0026#34;:\u0026#34;POC01\u0026#34;},\u0026#34;ServerInfo\u0026#34;:{\u0026#34;Hostname\u0026#34;:\u0026#34;localhost\u0026#34;,\u0026#34;ClusterID\u0026#34;:\u0026#34;54146e28-8472-4a01-a752-14e04bb4e5e6\u0026#34;,\u0026#34;ServerID\u0026#34;:\u0026#34;d8f39f5a-a854-428d-8f70-fa4a772a6191\u0026#34;},\u0026#34;ID\u0026#34;:\u0026#34;cpu:nil\u0026#34;,\u0026#34;Fields\u0026#34;:{\u0026#34;usage_guest\u0026#34;:0,\u0026#34;usage_guest_nice\u0026#34;:0,\u0026#34;usage_idle\u0026#34;:98.79396984923828,\u0026#34;usage_iowait\u0026#34;:0,\u0026#34;usage_irq\u0026#34;:0,\u0026#34;usage_nice\u0026#34;:0,\u0026#34;usage_softirq\u0026#34;:0,\u0026#34;usage_steal\u0026#34;:0,\u0026#34;usage_system\u0026#34;:0.6030150753768632,\u0026#34;usage_user\u0026#34;:0.6030150753768632},\u0026#34;Level\u0026#34;:\u0026#34;CRITICAL\u0026#34;,\u0026#34;Time\u0026#34;:\u0026#34;2020-01-07T05:15:30Z\u0026#34;,\u0026#34;Duration\u0026#34;:0,\u0026#34;Message\u0026#34;:\u0026#34;cpu:nil is CRITICAL\u0026#34;}\n&quot;,&#xd;
  &quot;time&quot;:&quot;2020-01-07T05:15:30Z&quot;,&#xd;
  &quot;duration&quot;:0,&#xd;
  &quot;level&quot;:&quot;CRITICAL&quot;,&#xd;
  &quot;data&quot;:{&#xd;
    &quot;series&quot;:[&#xd;
      {&#xd;
        &quot;name&quot;:&quot;cpu&quot;,&#xd;
        &quot;tags&quot;:{&#xd;
          &quot;cpu&quot;:&quot;cpu0&quot;,&#xd;
          &quot;host&quot;:&quot;POC01&quot;&#xd;
        },&#xd;
        &quot;columns&quot;:[&#xd;
          &quot;time&quot;,&#xd;
          &quot;usage_guest&quot;,&#xd;
          &quot;usage_guest_nice&quot;,&#xd;
          &quot;usage_idle&quot;,&#xd;
          &quot;usage_iowait&quot;,&#xd;
          &quot;usage_irq&quot;,&#xd;
          &quot;usage_nice&quot;,&#xd;
          &quot;usage_softirq&quot;,&#xd;
          &quot;usage_steal&quot;,&#xd;
          &quot;usage_system&quot;,&#xd;
          &quot;usage_user&quot;&#xd;
        ],&#xd;
        &quot;values&quot;:[&#xd;
          [&#xd;
            &quot;2020-01-07T05:15:30Z&quot;,&#xd;
            0,&#xd;
            0,&#xd;
            98.79396984923828,&#xd;
            0,&#xd;
            0,&#xd;
            0,&#xd;
            0,&#xd;
            0,&#xd;
            0.6030150753768632,&#xd;
            0.6030150753768632&#xd;
          ]&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;previousLevel&quot;:&quot;CRITICAL&quot;,&#xd;
  &quot;recoverable&quot;:true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/kapacitor/v1/2573db1e57fd1111ee3a32380204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Samba" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;summary&quot;: &quot;SAMBA &gt; eu-idc &gt; System &gt; euidbmkaf04 &gt; CPU Usage (SUM)&quot;,&#xd;
  &quot;status&quot;: &quot;open&quot;,&#xd;
  &quot;urgency&quot;: &quot;low&quot;,&#xd;
  &quot;event_time&quot;: &quot;2020-01-07T16:03:00+09:00&quot;,&#xd;
  &quot;metric_name&quot;: &quot;CPU Usage (SUM)&quot;,&#xd;
  &quot;threshold&quot;: &quot;90&quot;,&#xd;
  &quot;metric_value&quot;: &quot;93.1&quot;,&#xd;
  &quot;resource_name&quot;: &quot;SAMBA &gt; eu-idc &gt; System &gt; euidbmkaf04&quot;,&#xd;
  &quot;event_type&quot;: &quot;INFO&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/samba/v1/fa9b563a47fd1411ee5a32350204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert - Standard" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;summary&quot;:&quot;Threshold Crossed: 1 datapoint [31.84234972677596 (19/12/19 17:40:00)] was greater than or equal to the threshold (90.0)&quot;,&#xd;
  &quot;event_id&quot;:&quot;${__time(,)}${__Random(100,999)}&quot;,&#xd;
  &quot;status&quot;:&quot;open&quot;,&#xd;
  &quot;urgency&quot;:&quot;high&quot;,&#xd;
  &quot;event_time&quot;:&quot;2019-12-19T17:40:00+09:00&quot;,&#xd;
  &quot;metric_name&quot;:&quot;CPUUtilization&quot;,&#xd;
  &quot;threshold&quot;:&quot;90&quot;,&#xd;
  &quot;metric_value&quot;:&quot;93.1&quot;,&#xd;
  &quot;resource_name&quot;:&quot;i-9c09acd49a25&quot;,&#xd;
  &quot;event_type&quot;:&quot;INFO&quot;,&#xd;
  &quot;custom_details&quot;:{&#xd;
    &quot;ping time&quot;:&quot;1500ms&quot;,&#xd;
    &quot;load avg&quot;:&quot;0.75&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/standard/v1/2d37098887fd2711ee9a32350204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  Jennifer5" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customMessage&quot;:&quot;헤이! 제니퍼!&quot;,&#xd;
  &quot;detailMessaage&quot;:&quot;&quot;,&#xd;
  &quot;domainId&quot;:${__counter(true,)},&#xd;
  &quot;domainName&quot;:&quot;Data Server&quot;,&#xd;
  &quot;errorType&quot;:&quot;Metrics EVENT&quot;,&#xd;
  &quot;eventLevel&quot;:&quot;WARNING&quot;,&#xd;
  &quot;instanceData&quot;:{&#xd;
    &quot;configFilePath&quot;:&quot;/data/deploy/monitoring/jennifer/agent.java.extension/conf/jennifer.conf&quot;,&#xd;
    &quot;description&quot;:&quot;8&quot;,&#xd;
    &quot;hostName&quot;:&quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01&quot;,&#xd;
    &quot;instanceId&quot;:${__counter(true,)},&#xd;
    &quot;ipAddress&quot;:&quot;10.251.35.21&quot;,&#xd;
    &quot;platform&quot;:&quot;JAVA&quot;,&#xd;
    &quot;version&quot;:&quot;5.4.2&quot;&#xd;
  },&#xd;
  &quot;instanceDescription&quot;:&quot;8&quot;,&#xd;
  &quot;instanceId&quot;:8,&#xd;
  &quot;instanceName&quot;:&quot;8&quot;,&#xd;
  &quot;message&quot;:&quot;90 &lt; value&quot;,&#xd;
  &quot;metricsName&quot;:&quot;sys_cpu&quot;,&#xd;
  &quot;oType&quot;:&quot;SYSTEM&quot;,&#xd;
  &quot;serviceName&quot;:&quot;&quot;,&#xd;
  &quot;time&quot;:1558828854053,&#xd;
  &quot;txid&quot;:0,&#xd;
  &quot;value&quot;: 100.123123123&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/jennifer5/v1/5a783add17fd2611ee1a32320204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  Newrelic" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;owner&quot;:&quot;&quot;,&#xd;
  &quot;severity&quot;:&quot;CRITICAL&quot;,&#xd;
  &quot;policy_url&quot;:&quot;https://alerts.newrelic.com/accounts/2232231/policies/385535&quot;,&#xd;
  &quot;closed_violations_count&quot;:{&#xd;
    &quot;critical&quot;:0,&#xd;
    &quot;warning&quot;:0&#xd;
  },&#xd;
  &quot;current_state&quot;:&quot;open&quot;,&#xd;
  &quot;policy_name&quot;:&quot;Cpu_Metrics&quot;,&#xd;
  &quot;incident_url&quot;:&quot;https://alerts.newrelic.com/accounts/2232231/incidents/56322949&quot;,&#xd;
  &quot;condition_family_id&quot;:10188161,&#xd;
  &quot;incident_acknowledge_url&quot;:&quot;https://alerts.newrelic.com/accounts/2232231/incidents/56322949/acknowledge&quot;,&#xd;
  &quot;targets&quot;:[&#xd;
    {&#xd;
      &quot;id&quot;:&quot;3496480388814148382/eth0&quot;,&#xd;
      &quot;name&quot;:&quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01 (eth0)&quot;,&#xd;
      &quot;link&quot;:&quot;https://infrastructure.newrelic.com/accounts/2232231/alertLanding?violationId=249552445&quot;,&#xd;
      &quot;labels&quot;:{&#xd;
&#xd;
      },&#xd;
      &quot;product&quot;:&quot;INFRASTRUCTURE&quot;,&#xd;
      &quot;type&quot;:&quot;Host&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;version&quot;:&quot;1.0&quot;,&#xd;
  &quot;condition_id&quot;:39760816,&#xd;
  &quot;duration&quot;:239,&#xd;
  &quot;account_id&quot;:2232231,&#xd;
  &quot;incident_id&quot;: ${__Random(10000000,99999999)},&#xd;
  &quot;event_type&quot;:&quot;INCIDENT&quot;,&#xd;
  &quot;account_name&quot;:&quot;bespinglobal_6&quot;,&#xd;
  &quot;open_violations_count&quot;:{&#xd;
    &quot;critical&quot;:1,&#xd;
    &quot;warning&quot;:0&#xd;
  },&#xd;
  &quot;details&quot;:&quot;Test_Cpu_Metrics: Critical on SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01 (eth0)&quot;,&#xd;
  &quot;violation_callback_url&quot;:&quot;https://infrastructure.newrelic.com/accounts/2232231/alertLanding?violationId=249552445&quot;,&#xd;
  &quot;condition_name&quot;:&quot;Test_Cpu_Metrics&quot;,&#xd;
  &quot;timestamp&quot;:&quot; ${__time(,)&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/newrelic/v1/7ab5e17f57faf911ee7a32370204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  DevOS" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;summary&quot;: &quot;Notification limit usage exceeded&quot;,&#xd;
  &quot;event_id&quot;: &quot;12933506555331&quot;,&#xd;
  &quot;status&quot;: &quot;open&quot;,&#xd;
  &quot;urgency&quot;: &quot;high&quot;,&#xd;
  &quot;event_time&quot;: &quot;2022-10-04 10:58:00+09:00&quot;,&#xd;
  &quot;metric_name&quot;: &quot;limits.cpu&quot;,&#xd;
  &quot;threshold&quot;: &quot;90&quot;,&#xd;
  &quot;metric_value&quot;: &quot;93.1&quot;,&#xd;
  &quot;resource_name&quot;: &quot;cpu&quot;,&#xd;
  &quot;event_type&quot;: &quot;INFO&quot;,&#xd;
  &quot;custom_details&quot;: {&#xd;
    &quot;ping time&quot;: &quot;1500ms&quot;,&#xd;
    &quot;load avg&quot;: &quot;0.75&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/devos/v1/936c4e8e87fd2511ee1a32310204255062e6 </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  Prometheus" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;receiver&quot;: &quot;web-hook&quot;,&#xd;
  &quot;status&quot;: &quot;firing&quot;,&#xd;
  &quot;alerts&quot;: [&#xd;
    {&#xd;
      &quot;status&quot;: &quot;firing&quot;,&#xd;
      &quot;labels&quot;: {&#xd;
        &quot;alertname&quot;: &quot;InstanceDown&quot;,&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.33.31:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.33.31:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-00f673e0a5e7a3795&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-NOTIFICATION-BATCH01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      },&#xd;
      &quot;annotations&quot;: {&#xd;
        &quot;summary&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-NOTIFICATION-BATCH01 InstanceDown&quot;&#xd;
      },&#xd;
      &quot;startsAt&quot;: &quot;2019-09-19T03:27:07.622617778Z&quot;,&#xd;
      &quot;endsAt&quot;: &quot;2019-09-19T03:27:59.622617778Z&quot;,&#xd;
      &quot;generatorURL&quot;: &quot;http://seoul-a-dev-lightsaber-integration-was12:9090/graph?g0.expr=up+%3D%3D+0&amp;g0.tab=1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;status&quot;: &quot;firing&quot;,&#xd;
      &quot;labels&quot;: {&#xd;
        &quot;alertname&quot;: &quot;InstanceDown&quot;,&#xd;
        &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
        &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;host&quot;: &quot;10.251.35.21:9100&quot;,&#xd;
        &quot;instance&quot;: &quot;10.251.35.21:9100&quot;,&#xd;
        &quot;instance_id&quot;: &quot;i-0063871374dfa0219&quot;,&#xd;
        &quot;instance_name&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01&quot;,&#xd;
        &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
        &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
        &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
        &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
      },&#xd;
      &quot;annotations&quot;: {&#xd;
        &quot;summary&quot;: &quot;SEOUL-A-DEV-LIGHTSABER-EXTENSION-DAEMON01 InstanceDown&quot;&#xd;
      },&#xd;
      &quot;startsAt&quot;: &quot;2019-09-19T03:27:07.622617778Z&quot;,&#xd;
      &quot;endsAt&quot;: &quot;0001-01-01T00:00:00Z&quot;,&#xd;
      &quot;generatorURL&quot;: &quot;http://seoul-a-dev-lightsaber-integration-was12:9090/graph?g0.expr=up+%3D%3D+0&amp;g0.tab=1&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;groupLabels&quot;: {&#xd;
    &quot;alertname&quot;: &quot;InstanceDown&quot;,&#xd;
    &quot;service_name&quot;: &quot;LIGHTSABER&quot;&#xd;
  },&#xd;
  &quot;commonLabels&quot;: {&#xd;
    &quot;alertname&quot;: &quot;InstanceDown&quot;,&#xd;
    &quot;availability_zone&quot;: &quot;ap-northeast-2a&quot;,&#xd;
    &quot;dc&quot;: &quot;node-exporter&quot;,&#xd;
    &quot;instance_type&quot;: &quot;t2.medium&quot;,&#xd;
    &quot;job&quot;: &quot;node-exporter&quot;,&#xd;
    &quot;service_name&quot;: &quot;LIGHTSABER&quot;,&#xd;
    &quot;vpc_id&quot;: &quot;vpc-df439fb6&quot;&#xd;
  },&#xd;
  &quot;commonAnnotations&quot;: {},&#xd;
  &quot;externalURL&quot;: &quot;http://seoul-a-dev-lightsaber-integration-was11:9093&quot;,&#xd;
  &quot;version&quot;: &quot;4&quot;,&#xd;
  &quot;groupKey&quot;: &quot;{}/{}:{alertname=\&quot;InstanceDown\&quot;, service_name=\&quot;LIGHTSABER\&quot;}${__UUID()}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/prometheus/v1/b340b8b797fd2511ee7a32330204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  Nagios" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;alertType&quot;:&quot;service&quot;,&#xd;
  &quot;notificationType&quot;:&quot;&quot;,&#xd;
  &quot;serviceDesc&quot;: &quot;Total Processes_${__UUID()}&quot;,&#xd;
  &quot;serviceState&quot;:&quot;WARNING&quot;,&#xd;
  &quot;hostName&quot;: &quot;localhost_${__UUID()}&quot;,&#xd;
  &quot;hostDisplayName&quot;:&quot;localhost&quot;,&#xd;
  &quot;serviceDisplayName&quot;:&quot;Total Processes&quot;,&#xd;
  &quot;serviceProblemId&quot;: &quot;5_${__UUID()}&quot;&#xd;
  &quot;serviceOutput&quot;:&quot;PROCS WARNING: 117 processes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/nagios/v1/dd82e10f77fd2911ee3a32380204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alert -  Check mk" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;LASTSERVICESTATECHANGE_REL&quot;: &quot;10d 02:14:06&quot;,&#xd;
  &quot;LASTSERVICESTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;SERVICEACKAUTHOR&quot;: &quot;&quot;,&#xd;
  &quot;HOSTCHECKCOMMAND&quot;: &quot;check-mk-host-ping!-w 200.00,80.00% -c 500.00,100.00%&quot;,&#xd;
  &quot;HOSTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;LASTHOSTUP_REL&quot;: &quot;0d 00:01:00&quot;,&#xd;
  &quot;SERVICEDESC&quot;: &quot;Postfix status_${__UUID()}&quot;&#xd;
  &quot;SERVICEPERFDATA&quot;: &quot;&quot;,&#xd;
  &quot;LASTHOSTSTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;HOSTPERFDATA&quot;: &quot;rta=0.011ms;200.000;500.000;0; pl=0%;80;100;; rtmax=0.042ms;;;; rtmin=0.003ms;;;;&quot;,&#xd;
  &quot;SERVICEATTEMPT&quot;: &quot;1&quot;,&#xd;
  &quot;LASTHOSTSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;NOTIFICATIONCOMMENT&quot;: &quot;Schedule downtimes JS TEST&quot;,&#xd;
  &quot;SERVICESHORTSTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;MAIL_COMMAND&quot;: &quot;mail -s &apos;$SUBJECT$&apos; &apos;$CONTACTEMAIL$&apos;&quot;,&#xd;
  &quot;HOSTNAME&quot;: &quot;mylinux_${__UUID()}&quot;&#xd;
  &quot;LASTHOSTSTATECHANGE&quot;: &quot;1632464538&quot;,&#xd;
  &quot;SERVICESTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;SERVICEGROUPNAMES&quot;: &quot;&quot;,&#xd;
  &quot;LASTHOSTUP&quot;: &quot;1632727564&quot;,&#xd;
  &quot;SERVICEACKCOMMENT&quot;: &quot;&quot;,&#xd;
  &quot;SHORTDATETIME&quot;: &quot;2021-09-27 07:27:02&quot;,&#xd;
  &quot;CONTACTPAGER&quot;: &quot;&quot;,&#xd;
  &quot;LASTSERVICESTATECHANGE&quot;: &quot;1631855578&quot;,&#xd;
  &quot;LONGSERVICEOUTPUT&quot;: &quot;Status: the Postfix mail system is running\nPID: 1258&quot;,&#xd;
  &quot;HOSTPROBLEMID&quot;: &quot;0&quot;,&#xd;
  &quot;CONTACTNAME&quot;: &quot;cmkadmin&quot;,&#xd;
  &quot;LONGHOSTOUTPUT&quot;: &quot;&quot;,&#xd;
  &quot;HOSTFORURL&quot;: &quot;mylinux&quot;,&#xd;
  &quot;HOSTATTEMPT&quot;: &quot;1&quot;,&#xd;
  &quot;SERVICEFORURL&quot;: &quot;Postfix%20status&quot;,&#xd;
  &quot;WHAT&quot;: &quot;SERVICE&quot;,&#xd;
  &quot;HOSTALIAS&quot;: &quot;mylinux&quot;,&#xd;
  &quot;SERVICE_EC_CONTACT&quot;: &quot;$_SERVICEEC_CONTACT$&quot;,&#xd;
  &quot;HOSTLABEL_cmk/os_family&quot;: &quot;linux&quot;,&#xd;
  &quot;SERVICECHECKCOMMAND&quot;: &quot;check_mk-postfix_mailq_status&quot;,&#xd;
  &quot;LASTSERVICESTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;LASTSERVICEOK&quot;: &quot;1632727618&quot;,&#xd;
  &quot;SERVICEPROBLEMID&quot;: &quot;0&quot;,&#xd;
  &quot;HOST_SL&quot;: &quot;$_HOSTEC_SL$&quot;,&#xd;
  &quot;NOTIFICATIONAUTHORALIAS&quot;: &quot;&quot;,&#xd;
  &quot;HOST_ADDRESS_4&quot;: &quot;10.251.5.30&quot;&#xd;
  &quot;HOST_ADDRESS_6&quot;: &quot;&quot;,&#xd;
  &quot;SERVICEOUTPUT&quot;: &quot;Status: the Postfix mail system is running, PID: 1258&quot;,&#xd;
  &quot;PARAMETER_2&quot;: &quot;https://alertnowitgrdev.opsnow.com/integration/standard/v1/89172b231e93b911eb5b86470a960e68e6c8&quot;,&#xd;
  &quot;HOSTLABEL_cmk/device_type&quot;: &quot;vm&quot;,&#xd;
  &quot;CONTACTALIAS&quot;: &quot;cmkadmin&quot;,&#xd;
  &quot;HOSTDOWNTIME&quot;: &quot;0&quot;,&#xd;
  &quot;SERVICENOTIFICATIONNUMBER&quot;: &quot;1&quot;,&#xd;
  &quot;NOTIFICATIONAUTHORNAME&quot;: &quot;&quot;,&#xd;
  &quot;HOSTGROUPNAMES&quot;: &quot;check_mk&quot;,&#xd;
  &quot;HOSTSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;HOSTNOTIFICATIONNUMBER&quot;: &quot;1&quot;,&#xd;
  &quot;OMD_ROOT&quot;: &quot;/omd/sites/raweditionsite&quot;,&#xd;
  &quot;LASTHOSTSTATECHANGE_REL&quot;: &quot;3d 01:04:46&quot;,&#xd;
  &quot;LASTSERVICESHORTSTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;CONTACTEMAIL&quot;: &quot;jiseong.lee@bespinglobal.com&quot;,&#xd;
  &quot;PREVIOUSSERVICEHARDSHORTSTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;HOST_ADDRESS_FAMILY&quot;: &quot;4&quot;,&#xd;
  &quot;HOSTACKAUTHOR&quot;: &quot;&quot;,&#xd;
  &quot;HOSTURL&quot;: &quot;/check_mk/index.py?start_url=view.py%3Fview_name%3Dhoststatus%26host%3Dmylinux%26site%3Draweditionsite&quot;,&#xd;
  &quot;HOSTSTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;MICROTIME&quot;: &quot;1632727624367066&quot;,&#xd;
  &quot;PREVIOUSSERVICEHARDSTATE&quot;: &quot;OK&quot;,&#xd;
  &quot;HOSTLABEL_cmk/check_mk_server&quot;: &quot;yes&quot;,&#xd;
  &quot;NOTIFICATIONTYPE&quot;: &quot;DOWNTIMESTART&quot;,&#xd;
  &quot;LOGDIR&quot;: &quot;/omd/sites/raweditionsite/var/check_mk/notify&quot;,&#xd;
  &quot;OMD_SITE&quot;: &quot;raweditionsite&quot;,&#xd;
  &quot;HOSTACKCOMMENT&quot;: &quot;&quot;,&#xd;
  &quot;SERVICE_SL&quot;: &quot;$_SERVICEEC_SL$&quot;,&#xd;
  &quot;DATE&quot;: &quot;2021-09-27&quot;,&#xd;
  &quot;HOSTOUTPUT&quot;: &quot;OK - 10.251.5.30: rta 0.011ms, lost 0%&quot;,&#xd;
  &quot;NOTIFICATIONAUTHOR&quot;: &quot;cmkadmin&quot;,&#xd;
  &quot;MONITORING_HOST&quot;: &quot;ip-10-251-5-30&quot;,&#xd;
  &quot;HOSTTAGS&quot;: &quot;/wato/ auto-piggyback cmk-agent ip-v4 ip-v4-only lan no-snmp prod site:raweditionsite tcp&quot;,&#xd;
  &quot;SERVICESTATEID&quot;: &quot;0&quot;,&#xd;
  &quot;HOSTADDRESS&quot;: &quot;10.251.5.30_${__UUID()}&quot;&#xd;
  &quot;PREVIOUSHOSTHARDSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;LASTSERVICEOK_REL&quot;: &quot;0d 00:00:06&quot;,&#xd;
  &quot;HOST_EC_CONTACT&quot;: &quot;$_HOSTEC_CONTACT$&quot;,&#xd;
  &quot;CONTACTS&quot;: &quot;pagerduty&quot;,&#xd;
  &quot;SVC_SL&quot;: &quot;$_SERVICEEC_SL$&quot;,&#xd;
  &quot;LASTHOSTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;PREVIOUSHOSTHARDSHORTSTATE&quot;: &quot;UP&quot;,&#xd;
  &quot;LONGDATETIME&quot;: &quot;Mon Sept 27 07:27:02 UTC 2021&quot;,&#xd;
  &quot;SERVICEURL&quot;: &quot;/check_mk/index.py?start_url=view.py%3Fview_name%3Dservice%26host%3Dmylinux%26service%3DPostfix%20status%26site%3Draweditionsite&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alert}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collector/integration/checkmk/v1/0a56795427fd3111ee1a32390204255062e6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\apache-jmeter-5.4.3\bin\export.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">C:/Users/RKRISHNAVENI/Applications/apache-jmeter-5.6.2/bin/OutputFiles/output.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">_ga=GA1.1.1021175847.1695736606; BSP_LangCode=en; _clck=vrg9xm|2|ffd|0|1364;alertnow_access_token_dev=${access_token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">code</stringProp>
              <stringProp name="Header.value">${code}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">expires_in</stringProp>
              <stringProp name="Header.value">${expires_in}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">session_state</stringProp>
              <stringProp name="Header.value">${session_state}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">id_token</stringProp>
              <stringProp name="Header.value">${id_token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">not-before-policy</stringProp>
              <stringProp name="Header.value">${not-before-policy}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">scope</stringProp>
              <stringProp name="Header.value">${scope}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">refresh_expires_in</stringProp>
              <stringProp name="Header.value">${refresh_expires_in}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">refresh_token</stringProp>
              <stringProp name="Header.value">${refresh_token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value"> application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authority</stringProp>
              <stringProp name="Header.value">alertnowdev.opsnow.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">scheme</stringProp>
              <stringProp name="Header.value">https</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${token_type} ${access_token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">https://alertnowdev.opsnow.com/incident/incident/%257B%2522viewType%2522%253A%2522list%2522%257D</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Teamtype</stringProp>
              <stringProp name="Header.value">TT004</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
              <stringProp name="Header.value">empty</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
              <stringProp name="Header.value">cors</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
              <stringProp name="Header.value">same-origin</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value"> Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Authentication and Login" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${keycloak}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/BESPIN/protocol/openid-connect/auth?client_id=alertnow-frontend&amp;redirect_uri=https%3A%2F%2Falertnowdev.opsnow.com%2F&amp;state=a216a669-391a-44c5-8de3-a886b79aa67e&amp;response_mode=fragment&amp;response_type=code&amp;scope=openid&amp;nonce=6d0ab9a4-6da9-47e0-8571-9be368c4986a&amp;ui_locales=en</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Location url generator" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">Location</stringProp>
              <stringProp name="RegexExtractor.regex">Location: (https://alertnow-keycloak-dev.dev.opsnow.com/)(.*)\n</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">error</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - Session code" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">session_code</stringProp>
              <stringProp name="RegexExtractor.regex">Location: .*session_code=([^&amp;]+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - tabid" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">tab_id</stringProp>
              <stringProp name="RegexExtractor.regex">Location: .*tab_id=(\S+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">error</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${keycloak}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Location}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">Location2</stringProp>
              <stringProp name="RegexExtractor.regex">Location: (https://authstage.opsnow.com/)(.*)\n</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">error</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3. login page launch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${auth}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Location2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">Cookie: AUTH_SESSION_ID=7ba3bd5f-4e3e-423e-88d3-885fc3bc7b1b.ocp-keycloak-0; AUTH_SESSION_ID_LEGACY=7ba3bd5f-4e3e-423e-88d3-885fc3bc7b1b.ocp-keycloak-0; KC_RESTART=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJkNzJlMDU3MC0zNjQ0LTQ2NzEtYTExNi0wMjY2NGJlODAzZTEifQ.eyJjaWQiOiJhbGVydG5vdyIsInB0eSI6Im9wZW5pZC1jb25uZWN0IiwicnVyaSI6Imh0dHBzOi8vYWxlcnRub3cta2V5Y2xvYWstZGV2LmRldi5vcHNub3cuY29tL2F1dGgvcmVhbG1zL0JFU1BJTi9icm9rZXIvTU9QU0lEUC9lbmRwb2ludCIsImFjdCI6IkFVVEhFTlRJQ0FURSIsIm5vdGVzIjp7InNjb3BlIjoib3BlbmlkIiwiaXNzIjoiaHR0cHM6Ly9hdXRoc3RhZ2Uub3Bzbm93LmNvbS9hdXRoL3JlYWxtcy9CRVNQSU4iLCJyZXNwb25zZV90eXBlIjoiY29kZSIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYWxlcnRub3cta2V5Y2xvYWstZGV2LmRldi5vcHNub3cuY29tL2F1dGgvcmVhbG1zL0JFU1BJTi9icm9rZXIvTU9QU0lEUC9lbmRwb2ludCIsInN0YXRlIjoieDlhbmZEQjdCeGZIODhpdFhEYzZrM09lak1ac1NKc2ZSWWN1cmNQNjhqUS5tdm9wQUtWWjlmVS5hbGVydG5vdy1mcm9udGVuZCIsIm5vbmNlIjoiYXB5cXJrcUVKY2dvZXZDUVVuRjcxUSJ9fQ.zh3xU_o5zLlHYBMxLeHo8FdAigaRye0Pn-_WF0IPyTw; _ga=GA1.1.732948639.1695711241; _clck=1bd2zzg|2|ffc|0|1364; _ga_31WDR2T6TT=GS1.1.1695711243.1.0.1695711243.0.0.0; _clsk=jb9c28|1695711245048|1|1|x.clarity.ms/collect; _ga_TSQZ8VFC12=GS1.1.1695711241.1.1.1695711253.0.0.0; BSP_LangCode=en</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authority</stringProp>
                  <stringProp name="Header.value">authstage.opsnow.com</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">Session_id</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">session_code=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&amp;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">execution</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">execution=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&amp;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">tab_id</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">tab_id=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 - login post method" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">krishnavenir@clouddestinations.com</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">*Sumathiraja1*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">authstage.opsnow.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/BESPIN/login-actions/authenticate?session_code=${Session_id}&amp;execution=${execution}&amp;client_id=alertnow&amp;tab_id=${tab_id}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">AUTH_SESSION_ID=1632dd15-9180-4dea-82ab-43d30a6880ff.ocp-keycloak-0; AUTH_SESSION_ID_LEGACY=1632dd15-9180-4dea-82ab-43d30a6880ff.ocp-keycloak-0; KC_RESTART=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJkNzJlMDU3MC0zNjQ0LTQ2NzEtYTExNi0wMjY2NGJlODAzZTEifQ.eyJjaWQiOiJhbGVydG5vdyIsInB0eSI6Im9wZW5pZC1jb25uZWN0IiwicnVyaSI6Imh0dHBzOi8vYWxlcnRub3cta2V5Y2xvYWstZGV2LmRldi5vcHNub3cuY29tL2F1dGgvcmVhbG1zL0JFU1BJTi9icm9rZXIvTU9QU0lEUC9lbmRwb2ludCIsImFjdCI6IkFVVEhFTlRJQ0FURSIsIm5vdGVzIjp7InNjb3BlIjoib3BlbmlkIiwiaXNzIjoiaHR0cHM6Ly9hdXRoc3RhZ2Uub3Bzbm93LmNvbS9hdXRoL3JlYWxtcy9CRVNQSU4iLCJyZXNwb25zZV90eXBlIjoiY29kZSIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYWxlcnRub3cta2V5Y2xvYWstZGV2LmRldi5vcHNub3cuY29tL2F1dGgvcmVhbG1zL0JFU1BJTi9icm9rZXIvTU9QU0lEUC9lbmRwb2ludCIsInN0YXRlIjoiWU1nbzBJWlJzVlNXS2hpNkZpbEFEYUk5eXlKUkE5emRJZk5ocXZEQTEzVS5wNFVrX29JUjd1RS5hbGVydG5vdy1mcm9udGVuZCIsIm5vbmNlIjoiWm1mTE9UVFhuZ1hMQ2M1X1UtNUNadyJ9fQ.opkClT6Nj2i1HMDbNS367tYA_KJIozNyKpcm_-m1xsg; _ga=GA1.1.1536618582.1695722901; _clck=lmeqtq|2|ffc|0|1364; BSP_LangCode=en; userName=; rememberUserName=false; _ga_TSQZ8VFC12=GS1.1.1695726797.2.1.1695726826.0.0.0; _clsk=msa14u|1695726828512|3|1|x.clarity.ms/collect; _ga_31WDR2T6TT=GS1.1.1695726797.2.0.1695726829.0.0.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">69</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">_ga=GA1.1.732948639.1695711241; _clck=1bd2zzg|2|ffc|0|1364; _ga_31WDR2T6TT=GS1.1.1695711243.1.0.1695711243.0.0.0; _clsk=jb9c28|1695711245048|1|1|x.clarity.ms/collect; _ga_TSQZ8VFC12=GS1.1.1695711241.1.1.1695711253.0.0.0; BSP_LangCode=en</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua-Mobile" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua-Mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua-Platform" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua-Platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authority</stringProp>
                  <stringProp name="Header.value">authstage.opsnow.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">redirect</stringProp>
              <stringProp name="RegexExtractor.regex">Location: (https://alertnow-keycloak-dev.dev.opsnow.com/)(.*)\n</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">error</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Authcode extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.regex">Location: .*code=([^&amp;]+)</stringProp>
              <stringProp name="RegexExtractor.refname">code</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5-endpoints" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${keycloak}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${redirect}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">launch</stringProp>
              <stringProp name="RegexExtractor.regex">Location: (https://alertnowdev.opsnow.com/)(.*)\n</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">error</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Auth code extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.regex">Location: .*?&amp;code=([^&amp;\r\n]+)</stringProp>
              <stringProp name="RegexExtractor.refname">code</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">true</stringProp>
              <stringProp name="BoundaryExtractor.refname">code</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&amp;code=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary"> Referrer</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6-endpoints-redirect" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alertnowdev.opsnow.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${launch}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_ga=GA1.1.1021175847.1695736606; _clck=vrg9xm|2|ffc|0|1364; BSP_LangCode=en; JSESSIONID=213E8DDDCD28EB2F69D2FE0AB429D4A2; _ga_31WDR2T6TT=GS1.1.1695736608.1.1.1695737292.0.0.0; _clsk=723n3z|1695737294238|6|1|x.clarity.ms/collect; _ga_TSQZ8VFC12=GS1.1.1695736605.1.1.1695737294.0.0.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">code</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">code=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary"></stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7-token post" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">${code}</stringProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">authorization_code</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">alertnow-frontend</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://alertnowdev.opsnow.com/</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${keycloak}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/BESPIN/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_ga=GA1.1.1021175847.1695736606; _clck=vrg9xm|2|ffc|0|1364; BSP_LangCode=en; JSESSIONID=213E8DDDCD28EB2F69D2FE0AB429D4A2; _ga_31WDR2T6TT=GS1.1.1695736608.1.1.1695737292.0.0.0; _clsk=723n3z|1695737294238|6|1|x.clarity.ms/collect; _ga_TSQZ8VFC12=GS1.1.1695736605.1.1.1695737294.0.0.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">code</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">code=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary"></stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="method" elementType="Header">
                  <stringProp name="Header.name">method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="scheme" elementType="Header">
                  <stringProp name="Header.name">scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">226</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://alertnowdev.opsnow.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua-Mobile" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua-Mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Ch-Ua-Platform" elementType="Header">
                  <stringProp name="Header.name">Sec-Ch-Ua-Platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Authority" elementType="Header">
                  <stringProp name="Header.name">Authority</stringProp>
                  <stringProp name="Header.value">alertnow-keycloak-dev.dev.opsnow.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://alertnowdev.opsnow.com</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-Access Token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - Refresh Token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-Refreshes in" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refresh_expires_in</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.refresh_expires_in</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - not before policy" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">not-before-policy</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.not-before-policy</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-scope" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">scope</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.scope</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-id token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.id_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-token type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token_type</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.token_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-session state" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">session_state</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_state</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor-expires in" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">expires_in</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expires_in</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Incidents" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="incidents landing Page" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__time(yyyy-MM-dd)} 00:00:00&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Search Incidents " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident?&amp;searchWord=${label}&amp;startDt=${__time(yyyy-MM-dd)} 00:00:00&amp;endDt=${__time(yyyy-MM-dd)} 23:59:59</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Incident Creation" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Incident - Post Request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;svcNo&quot;: &quot;11543&quot;,&#xd;
  &quot;smrySbst&quot;: &quot;test incident&quot;,&#xd;
  &quot;userNo&quot;: 2303632,&#xd;
  &quot;svcEscalYn&quot;: &quot;Y&quot;,&#xd;
  &quot;svcTcktPriYn&quot;: &quot;Y&quot;,&#xd;
  &quot;noticeContent&quot;: &quot;&quot;,&#xd;
  &quot;noticeTitle&quot;: &quot;&quot;,&#xd;
  &quot;noticeTmpltNo&quot;: &quot;&quot;,&#xd;
  &quot;noticeYn&quot;: &quot;N&quot;,&#xd;
  &quot;relatedIncident&quot;: [],&#xd;
  &quot;svcRoutInfo&quot;: [],&#xd;
  &quot;tcktDate&quot;: &quot;&quot;,&#xd;
  &quot;tcktPriNo&quot;: &quot;&quot;,&#xd;
  &quot;textSbst&quot;: &quot;&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Post request to create incident</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Closing Incidents" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Close Incidents " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;tcktNo&quot;:13374892,&#xd;
	&quot;beforeStatNo&quot;:10002,&#xd;
	&quot;tcktStatNo&quot;:10003&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident/status</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller - Date Dropdown" enabled="false">
            <intProp name="InterleaveControl.style">1</intProp>
            <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
          </InterleaveControl>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;2016-01-01 00:00:00&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696571535142&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Incidents created today" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Incidents created Today " enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__time(yyyy-MM-dd)} 00:00:00&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created Yesterday " enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created Yesterday " enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P1D,)}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__timeShift(yyyy-MM-dd 23:59:59,,-P1D,)}&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created - Recent 1 Week" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - Recent 1 Week" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P6D,)}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created - Recent 1 Month" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - Recent 1 Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P30D,)}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller -  This week Start date" enabled="true"/>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - This week Start date" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat

def today = new Date()
def startOfWeek = today - today.day

vars.put(&quot;startDt&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(startOfWeek) + &quot; 00:00:00&quot;)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - This week" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${startDt}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created - This Month" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - This Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${__time(yyyy-MM-01)} 00:00:00&quot;,&#xd;
  &quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created - Last Week " enabled="true"/>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - Last week Start and End date" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat

def today = new Date()
def startOfLastWeek = today - today.day - 7
def endOfLastWeek = startOfLastWeek + 6

vars.put(&quot;startOfLastWeek&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(startOfLastWeek) + &quot; 00:00:00&quot;)
vars.put(&quot;endOfLastWeek&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(endOfLastWeek) + &quot; 23:59:59&quot;)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - Last Week " enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${startOfLastWeek}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${endOfLastWeek}&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Incidents created - Last Month" enabled="true"/>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - Last Month start and End Date" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Calendar

Calendar calendar = Calendar.getInstance()

// Set to the first day of the current month
calendar.set(Calendar.DATE, 1)
calendar.add(Calendar.DATE, -1)  // Move to the last day of the previous month
def endOfLastMonth = calendar.getTime()

// Set to the first day of the previous month
calendar.set(Calendar.DATE, 1)
def startOfLastMonth = calendar.getTime()

vars.put(&quot;startOfLastMonth&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(startOfLastMonth) + &quot; 00:00:00&quot;)
vars.put(&quot;endOfLastMonth&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(endOfLastMonth) + &quot; 23:59:59&quot;)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Incidents created - Last Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;startDt&quot;: &quot;${startOfLastMonth}&quot;,&#xd;
  &quot;endDt&quot;: &quot;${endOfLastMonth}&quot;,&#xd;
  &quot;userNo&quot;: 1,&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;_&quot;: 1696572143801&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/incident</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Alerts" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Alerts Landing Page" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__time(yyyy-MM-dd)} 00:00:00&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts created today" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__time(yyyy-MM-dd)} 00:00:00&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Search Alerts " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert?page=1&amp;rows=50&amp;searchWord=${label}&amp;startDt=${__time(yyyy-MM-dd)} 00:00:00&amp;endDt=${__time(yyyy-MM-dd)} 23:59:59&amp;&amp;_=1699449986186</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller for Date Dropdown to view Alerts" enabled="false">
            <intProp name="InterleaveControl.style">1</intProp>
            <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
          </InterleaveControl>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - All Alerts" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All ALerts" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;2016-01-01 00:00:00&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created today" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts created today" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__time(yyyy-MM-dd)} 00:00:00&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created yesterday" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts created Yesterday" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	 &quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P1D,)}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__timeShift(yyyy-MM-dd 23:59:59,,-P1D,)}&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created recent 1 weel" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts - Recent 1 week" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P6D,)}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created recent 1 month" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts - Recent 1 Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__timeShift(yyyy-MM-dd 00:00:00,,-P30D,)}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created This week " enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts - This week" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${startDt}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created this month" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts This Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${__time(yyyy-MM-01)} 00:00:00&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${__time(yyyy-MM-dd)} 23:59:59&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created Last week" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts _ last Week" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${startOfLastWeek}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${endOfLastWeek}&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Alerts created Last Month" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Alerts  - Last Month" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: 1,&#xd;
  	&quot;rows&quot;: 20,&#xd;
	&quot;startDt&quot;: &quot;${startOfLastWeek}&quot;,&#xd;
  	&quot;endDt&quot;: &quot;${endOfLastWeek}&quot;,&#xd;
	&quot;_&quot;: 1696589615548&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Services" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Services Landing Page " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;,&#xd;
  &quot;_&quot;: 1696834991479&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/service</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Integrations" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Integration Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;,&#xd;
  &quot;_&quot;: 696835313614&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/integration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Escalations" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Escalation Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;,&#xd;
  &quot;_&quot;: 1696835441018&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/escalation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Schedules" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Schedule Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 5,&#xd;
  &quot;tmznOfsVal&quot;: &quot;+05:30&quot;,&#xd;
  &quot;isMineTf&quot;: &quot;T&quot;,&#xd;
  &quot;_&quot;: 1696842582465&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/schedule</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Users" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Users Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;userNm:asc&quot;,&#xd;
  &quot;_&quot;: 1696842816943&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Teams" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Teams Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;,&#xd;
  &quot;type&quot;: &quot;ALL&quot;,&#xd;
  &quot;_&quot;: 1696842955939&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/team</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extensions" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Extensions Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;,&#xd;
  &quot;type&quot;: &quot;ALL&quot;,&#xd;
  &quot;_&quot;: 1696842955939&#xd;
}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notice Template" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notice Template  Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/template</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Notification History " enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notification History  Landing Page" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;page&quot;: 1,&#xd;
  &quot;rows&quot;: 20,&#xd;
  &quot;oidx&quot;: &quot;regDt:desc&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${alertnow_domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/26b94a7a-4c52-410e-a77b-a4df8e7e25d3/notihist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
        <stringProp name="FileSaver.filename">C:\Users\RKRISHNAVENI\Applications\apache-jmeter-5.6.2\bin\OutputFiles\alerts.json</stringProp>
        <boolProp name="FileSaver.errorsonly">false</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.skipautonumber">false</boolProp>
      </ResultSaver>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
